<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ytjohn</title><link href="http://www.yourtech.us/" rel="alternate"></link><link href="http://www.yourtech.us/feeds/all-en.atom.xml" rel="self"></link><id>http://www.yourtech.us/</id><updated>2013-07-28T00:00:00+02:00</updated><entry><title>Foreman managed virtual datacenter</title><link href="http://www.yourtech.us//2013/07/foreman-managed-virtual-datacenter.html" rel="alternate"></link><updated>2013-07-28T00:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2013-07-28:/2013/07/foreman-managed-virtual-datacenter.html</id><summary type="html">&lt;p&gt;I ordered the KS2 from &lt;www.ovh.com&gt; - $50/month, 3.4ghz, 16gb ram, and a 1TB software raid setup. My plan is to set this
up as a single server virtual datacenter. They also have the SP2 with twice the ram and storage for $90, but I figured I'd test out
the cheaper option first. I can always upgrade and migrate to a larger server later if I get into heavier usage. The prices are rather cheap and they have scripts that will automatically provision physical servers. &lt;/p&gt;
&lt;p&gt;I had this installed with Centos 6. I tried first using the "ovh secure" kernel, but I could not get KVM working with that kernel, so I had it reinstalled with the "vendor" kernel. I allocated 20GB to "/" and the remainder (898GB) to "/data". &lt;/p&gt;
&lt;p&gt;Installing kvm and libvirt is a simple yum command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;yum&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;kvm&lt;/span&gt; &lt;span class="n"&gt;libvirt&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;virtinst&lt;/span&gt; &lt;span class="n"&gt;qemu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;kvm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, on my workstation, I installed &lt;a href="http://virt-manager.org/"&gt;virt-manager&lt;/a&gt;, which allowed me to graphically create and install virtual machines (I can do this by hand on the server, but virt-manager is a nice way to get started). The connection is done over ssh, so it will either ask for your username/password, or it can use ssh-key authentication (preferred).&lt;/p&gt;
&lt;p&gt;I created &lt;code&gt;/data/isos&lt;/code&gt; and &lt;code&gt;/data/vms&lt;/code&gt; to hold my installation isos and virual machines respectively. The trick I had to work out is that I couldn't just add "/data" as a directory-based storage volume, I had to make one for isos and one for vms. I also found that the default directory (/var/lib/libvirt/images) is rather difficult to remove. I disabled it and removed it, but it showed back up later. When creating through the dialog, virt-manager wants to put your vm image in "default". &lt;/p&gt;
&lt;p&gt;Creating a new virtual machine using virt-manager and a downloaded ubuntu 12.04 iso image (in /data/isos) was rather slick. I created a new volume in /data/vms, set the memory and cpu and started it. The default networking is a NAT'd network in the 192.168.122.x/24 network. As ovh only provides 3 IP addresses for free, I'm content to start with this network for testing, but I plan to move to a different subnet mask.&lt;/p&gt;
&lt;p&gt;If I need to nat ports, the libvirt site has a useful page on &lt;a href="http://wiki.libvirt.org/page/Networking#Forwarding_Incoming_Connections"&gt;forwarding incoming connections&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;nat&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;PREROUTING&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dport&lt;/span&gt; &lt;span class="n"&gt;HOST_PORT&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;DNAT&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;GUESTIP&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;GUESTPORT&lt;/span&gt;
&lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;FORWARD&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;GUESTHOST&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;NEW&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dport&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;GUESTPORT&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;ACCEPT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I have been reading some good things about &lt;a href="http://theforeman.org/"&gt;The Formean&lt;/a&gt;, and how you can &lt;a href="http://engineering.yakaz.com/managing-an-infrastructure-datacenter-with-foreman-and-puppet.html"&gt;manage an infrastructure with it&lt;/a&gt;, so my next real VM will be an install of foreman. This will hopefully let me setup an enviroment where I can build virtual machines and provision them automatically. I don't know (yet) if The Foreman will handle iptable rules on the host, but it seems to have the ability to call external scripts and be customized, so I should be able to provision NAT on the host when provisioning a new VM.&lt;/p&gt;
&lt;p&gt;Foreman utilizes DHCP and PXE to install "bare metal" VMs, so we need a network without DHCP. Now, to create my non-dhcp managed nat, I copy the default network xml file and modify it with my new range and remove the dhcp address&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;libvirt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;networks&lt;/span&gt;
&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt; &lt;span class="n"&gt;netmanaged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Modified netmanaged.xml:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;network&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;name&amp;gt;&lt;/span&gt;managednat&lt;span class="nt"&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;bridge&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;virbr1&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;forward/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ip&lt;/span&gt; &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;172.16.25.1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;netmask=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;255.255.255.0&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ip&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/network&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It should show up with &lt;code&gt;virsh net-list --all&lt;/code&gt; and I can activate it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# virsh net-list --all&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;                 &lt;span class="n"&gt;State&lt;/span&gt;      &lt;span class="n"&gt;Autostart&lt;/span&gt;     &lt;span class="n"&gt;Persistent&lt;/span&gt;
&lt;span class="o"&gt;--------------------------------------------------&lt;/span&gt;
&lt;span class="k"&gt;default&lt;/span&gt;              &lt;span class="n"&gt;active&lt;/span&gt;     &lt;span class="n"&gt;yes&lt;/span&gt;           &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;managednat&lt;/span&gt;           &lt;span class="n"&gt;inactive&lt;/span&gt;   &lt;span class="n"&gt;yes&lt;/span&gt;           &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="cp"&gt;# virsh net-autostart managednat&lt;/span&gt;
&lt;span class="n"&gt;Network&lt;/span&gt; &lt;span class="n"&gt;managednat&lt;/span&gt; &lt;span class="n"&gt;marked&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;autostarted&lt;/span&gt;

&lt;span class="cp"&gt;# virsh net-list --all&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;                 &lt;span class="n"&gt;State&lt;/span&gt;      &lt;span class="n"&gt;Autostart&lt;/span&gt;     &lt;span class="n"&gt;Persistent&lt;/span&gt;
&lt;span class="o"&gt;--------------------------------------------------&lt;/span&gt;
&lt;span class="k"&gt;default&lt;/span&gt;              &lt;span class="n"&gt;active&lt;/span&gt;     &lt;span class="n"&gt;yes&lt;/span&gt;           &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;managednat&lt;/span&gt;           &lt;span class="n"&gt;inactive&lt;/span&gt;   &lt;span class="n"&gt;yes&lt;/span&gt;           &lt;span class="n"&gt;yes&lt;/span&gt;

&lt;span class="cp"&gt;# virsh net-start managednat&lt;/span&gt;
&lt;span class="n"&gt;Network&lt;/span&gt; &lt;span class="n"&gt;managednat&lt;/span&gt; &lt;span class="n"&gt;started&lt;/span&gt;

&lt;span class="cp"&gt;# virsh net-list --all&lt;/span&gt;
&lt;span class="n"&gt;Name&lt;/span&gt;                 &lt;span class="n"&gt;State&lt;/span&gt;      &lt;span class="n"&gt;Autostart&lt;/span&gt;     &lt;span class="n"&gt;Persistent&lt;/span&gt;
&lt;span class="o"&gt;--------------------------------------------------&lt;/span&gt;
&lt;span class="k"&gt;default&lt;/span&gt;              &lt;span class="n"&gt;active&lt;/span&gt;     &lt;span class="n"&gt;yes&lt;/span&gt;           &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;managednat&lt;/span&gt;           &lt;span class="n"&gt;active&lt;/span&gt;     &lt;span class="n"&gt;yes&lt;/span&gt;           &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The gateway will be 172.16.25.1, and I will assign the IP 172.16.25.5 to my Foreman virtual machine, aptly called "builder".  Once the basic ubuntu machine is installed by hand (hopefully the last one we do in this environment), I'll want access to it. Ideally, this would be behind a firewall with vpn access, but I haven't got that far yet. So for now, I'll just setup some NAT for port 22 and 443.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;nat&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;PREROUTING&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dport&lt;/span&gt; &lt;span class="mi"&gt;8122&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;DNAT&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mf"&gt;172.16.25.5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;FORWARD&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="mf"&gt;172.16.25.5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;NEW&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dport&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;ACCEPT&lt;/span&gt;
&lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;nat&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;PREROUTING&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dport&lt;/span&gt; &lt;span class="mi"&gt;8143&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;DNAT&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="mf"&gt;172.16.25.5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;443&lt;/span&gt;
&lt;span class="n"&gt;iptables&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;FORWARD&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="mf"&gt;172.16.25.5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;NEW&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;tcp&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;dport&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="n"&gt;ACCEPT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using "foreman-installer" is the most recommended method, ensuring that we have current packages directly from theforeman.org. I've installed 12.04 LTS (precise), so it's fairly straightforward, though I modified slightly from &lt;a href="http://theforeman.org/manuals/1.2/index.html#3.2ForemanInstaller"&gt;the installation documentation&lt;/a&gt;. The original instruction rely on running as root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# get some apt support programs &lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;software&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;

&lt;span class="cp"&gt;# add the deb.theforeman.org repository&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;echo deb http://deb.theforeman.org/ precise stable &amp;gt; /etc/apt/sources.list.db/foreman.list&amp;quot;&lt;/span&gt;  
&lt;span class="cp"&gt;# add the key&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//deb.theforeman.org/foreman.asc -O- | sudo apt-key add -&lt;/span&gt;
&lt;span class="cp"&gt;# install the installer&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;update&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;foreman&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;installer&lt;/span&gt;

&lt;span class="cp"&gt;# run the installer&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ruby&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;foreman&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;installer&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;generate_answers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, Foreman is running on port 443, or in my case "https://externalip:8143/". I can login with the username "admin" and the password "changeme".&lt;/p&gt;
&lt;p&gt;I've been reading the manual more at this point, but I think my next step is to watch the video &lt;a href="http://www.youtube.com/watch?v=eHjpZr3GB6s"&gt;Foreman Quickstart: unattendend installation&lt;/a&gt;. If I can grok that (and it looks nicely step by step) I'll try and setup an unattended install. &lt;/p&gt;</summary><category term="foreman"></category><category term="puppet"></category><category term="libvirt"></category><category term="virsh"></category></entry><entry><title>New Static Site</title><link href="http://www.yourtech.us//2013/03/new-static-site.html" rel="alternate"></link><updated>2013-03-24T00:00:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2013-03-24:/2013/03/new-static-site.html</id><summary type="html">&lt;p&gt;I had mentioned previously that I had taken up &lt;a href="http://www.yourtech.us//2012/08/markdown-blogging.html"&gt;markdown blogging&lt;/a&gt;. At that time, I was writing my post in markdown, converting it to HTML, and then injecting it into &lt;a href="http://www.blogger.com"&gt;blogger&lt;/a&gt;. This last week, I have done a good bit of work to convert my site to a "static site" using &lt;a href="http://www.getpelican.com/"&gt;Pelican&lt;/a&gt;. A static site is made up entirely of static files - no database, no php includes, just your basic collection of html, javascript, css, and images. I write content in Markdown on my laptop. I develop my theme locally as well. Then I run "make html" and pelican will process my configuration file, my content, and my theme to generate all of the pages, posts, archive pages, and various rss feeds. The end result is a directory full of files that can be dropped onto pretty much any webserver.&lt;/p&gt;
&lt;p&gt;There were a few hic-cups. Many of my older pages were not originally written in markdown, but rather using whatever CMS editor I had at the time. Pelican has an import feature, but some things got lost in translation. Any preformated code blocks had to be re-created manually (amusingly enough, copying and pasting from the old web page into vim, then indenting them properly).&lt;/p&gt;
&lt;p&gt;The biggest loss is a search engine. A CMS like Wordpress or a hosted solution like Blogger stores your content in a database and provides a search interface to that content. With static pages, not so much. Most of the web gets around this using Google's &lt;a href="http://www.google.com/cse"&gt;CSE&lt;/a&gt;, which I am trying as well. As of yet, almost nothing appears to be indexing on this page. If this continues, I will setup a stanadlone search engine that simply indexes the pages on this site. &lt;strong&gt;(&lt;strong&gt;UPDATE&lt;/strong&gt;: Google has a nice fresh index of the website, covering everything except this page I wrote yesterday.)&lt;/strong&gt; I'm still researching possibilities on that. Ten years ago, &lt;a href="http://www.htdig.org/"&gt;ht://dig&lt;/a&gt; was the premier application to use, but development on that seems to have stopped in 2004. &lt;a href="http://www.sphider.eu/"&gt;Sphider&lt;/a&gt; looks like a good product, but again, development stopped in 2007. Small search engine development seems to have dropped off significantly with the rise of Google's popularity. &lt;/p&gt;
&lt;p&gt;A copy of the website content and theme can be tracked on &lt;a href="http://www.github.com/ytjohn/ytwebsite"&gt;github&lt;/a&gt;. &lt;/p&gt;</summary></entry><entry><title>Starting with Ruby and AWS</title><link href="http://www.yourtech.us//2012/11/starting-with-ruby-and-aws.html" rel="alternate"></link><updated>2012-11-02T23:29:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-11-02:/2012/11/starting-with-ruby-and-aws.html</id><summary type="html">&lt;p&gt;This weekend I decided to takle both learning Ruby and working with AWS
via the Ruby API. Having only played with both of these in the past,
this presents two learning challenges at once. However, from past
projects, this is how I learn best. I am somewhat familiar with AWS
terms and once made a script in Python to fire up an instance. This was
before Amazon came out with their management console, so I imagine
things have come a long way since then (hopefully easier). I also played
with Ruby for a while, but didn't have a decent project for it. Having a
project with goals will hopefully keep me on track and give me a way to
measure my progress.&lt;/p&gt;
&lt;p&gt;My goals for this project are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Utilize a web based interface. Using rails seems to be the popular
    way to do this, and I'd like to base my template interface off of
    &lt;a href="https://github.com/ytjohn/boilerstrap5"&gt;boilerstrap5&lt;/a&gt;, a combination of twitter-bootstrap and
    html5boilerplate. This will probably have the most trial and error
    to get it right.&lt;/li&gt;
&lt;li&gt;Connect to the AWS api and pull some basic information such as my
    account name.&lt;/li&gt;
&lt;li&gt;Fetch details about an AMI image. Maybe I'll be able to parse a list
    of public images, or maybe I can just punch in an image ID and pull
    up the details.&lt;/li&gt;
&lt;li&gt;Start an instance from an AMI image. This might require some steps
    like setting up a an S3 bucket -- we'll see.&lt;/li&gt;
&lt;li&gt;List my running instances.&lt;/li&gt;
&lt;li&gt;Control a running instance - ie, power cycle it.&lt;/li&gt;
&lt;li&gt;Destroy an instance.&lt;/li&gt;
&lt;li&gt;BONUS: Do something similar with S3 buckets - create, list, destroy.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;First off, I need to setup a ruby development environment. Since I have
used &lt;a href="http://blog.yourtech.us/feeds/posts/www.jetbrains.com/pycharm/"&gt;PyCharm&lt;/a&gt; in the past, I will try JetBrain's &lt;a href="http://www.jetbrains.com/ruby/"&gt;RubyMine&lt;/a&gt; for my
editor environment. After installing this, the first thing I learned is
that rails is not installed. I could install using apt-get, but
Jetbrains recommends using &lt;a href=""&gt;RVM&lt;/a&gt;. It looks like a nice way to manage
different versions of Ruby, rails, and gems. I know when I have
installed Ruby applications requiring gems, gem versions was always a
source of concern. It is very easy to get mismatched gem versions in the
wild.&lt;/p&gt;
&lt;p&gt;RVM install locally to \~/.rvm on linux, which is nice - you don't mess
up any system wide ruby installations and keep everything local to your
development environment. After installation, I had to figure out a
couple bits with rvm.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rvm install 1.9.2&lt;/code&gt; # installs ruby 1.9.2&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rvm list&lt;/code&gt; # lists versions of ruby installed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rvm use 1.8.7&lt;/code&gt; # use ruby 1.8.7&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First, your terminal has to be setup as a login shell. This tripped me
up for a while until I changed the settings in my terminal emulator.
&lt;a href="http://software.jessies.org/terminator"&gt;terminator&lt;/a&gt; has this as checkmark option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;ytjohn&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;freshdesk&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;rvm&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;

&lt;span class="nx"&gt;rvm&lt;/span&gt; &lt;span class="nx"&gt;rubies&lt;/span&gt;

   &lt;span class="nx"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;p371&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;x86_64&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;
   &lt;span class="nx"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;p320&lt;/span&gt; &lt;span class="cp"&gt;[&lt;/span&gt; &lt;span class="nx"&gt;x86_64&lt;/span&gt; &lt;span class="cp"&gt;]&lt;/span&gt;

&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="o"&gt;=*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;
&lt;span class="err"&gt;#&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;

&lt;span class="nx"&gt;ytjohn&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;freshdesk&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="nx"&gt;rvm&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="mf"&gt;1.8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="nx"&gt;RVM&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;selecting&lt;/span&gt; &lt;span class="nx"&gt;rubies&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rvm use ...&amp;#39;&lt;/span&gt; &lt;span class="nx"&gt;will&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;work&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;You&lt;/span&gt; &lt;span class="nx"&gt;need&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;change&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;terminal&lt;/span&gt; &lt;span class="nx"&gt;emulator&lt;/span&gt; &lt;span class="nx"&gt;preferences&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;allow&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="nx"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Sometimes&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;required&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bash&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="nx"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;Please&lt;/span&gt; &lt;span class="nx"&gt;visit&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//rvm.io/integration/gnome-terminal/ for a example.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After switching to login&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ytjohn&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;freshdesk&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;rvm&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="mf"&gt;1.8.7&lt;/span&gt;
&lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ytjohn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rvm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gems&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.8.7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p371&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, once you get ruby and rails working, you can create your rails
project. I'm starting with a rails project because it's "all the rage"
and gives you a decent running start. Later, I'll work on switching the
supplied templates with boilerplate + bootstrap based ones.&lt;/p&gt;
&lt;p&gt;This gets me started. Next up, I'll actually create the project from
within RubyMine and just work on basic web functionality.&lt;/p&gt;</summary></entry><entry><title>dingus problems</title><link href="http://www.yourtech.us//2012/09/dingus-problems.html" rel="alternate"></link><updated>2012-09-20T12:50:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-09-20:/2012/09/dingus-problems.html</id><summary type="html">&lt;p&gt;Yesterday, I ran into a small, but confusing issue converting from markdown to html for a post. A markdown process will convert html in a code block to html escaped entities. That way, when you use the resulting html, your html example code doesn't get interpreted as html.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is a &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;strong&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; example.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Gets converted to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;lt;&lt;/span&gt;p&lt;span class="ni"&gt;&amp;amp;gt;&lt;/span&gt;This is a &lt;span class="ni"&gt;&amp;amp;lt;&lt;/span&gt;strong&lt;span class="ni"&gt;&amp;amp;gt;&lt;/span&gt;strong&lt;span class="ni"&gt;&amp;amp;lt;&lt;/span&gt;/strong&lt;span class="ni"&gt;&amp;amp;gt;&lt;/span&gt; example.&lt;span class="ni"&gt;&amp;amp;lt;&lt;/span&gt;/p&lt;span class="ni"&gt;&amp;amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the "dingus" I made, this didn't appear to be happening. The above example rendered as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;/span&gt;This is a &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;strong&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt; example.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Furthermore, it worked perfectly fine using the "official" php-markdown &lt;a href="http://michelf.ca/projects/php-markdown/dingus/"&gt;dingus&lt;/a&gt;. I was using their library, and it's incredibly simple to implement. After some digging, I discovered that in my dingus, the code was being converted properly in my preview section, but not in my HTML Source textarea. I was printing the same &lt;code&gt;$render&lt;/code&gt; variable in both sections, but getting different results in my browser. &lt;/p&gt;
&lt;p&gt;As it turns out, most html elements are "CDATA" and a textarea is "PCDATA". When all is said and done, this means that instead of needing to send &amp;lt;, I need to send &amp;amp;lt to the browser. Fortunately, php has a function called htmlspecialchars() that does this for me. For my HTML Output, I just needed to change &lt;code&gt;print $render&lt;/code&gt; to &lt;code&gt;print htmlspecialchars($render)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;20120920&lt;/p&gt;</summary></entry><entry><title>Bootstrap and CDNs</title><link href="http://www.yourtech.us//2012/09/bootstrap-and-cdns.html" rel="alternate"></link><updated>2012-09-18T18:26:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-09-18:/2012/09/bootstrap-and-cdns.html</id><summary type="html">&lt;p&gt;Often when creating a "modern" web page, it's very common to find yourself reinventing the wheel over and over again. I know any time I wanted to create a two-column layout, I would have to look at previous works of mine or search the Internet for a decent example. However, I recently came across Twitter's &lt;a href="http://twitter.github.com/bootstrap/index.html" title="Twitter Bootstrap"&gt;Bootstrap&lt;/a&gt; framework. At it's core, it's just a css file that divide your web page into a 12-column "&lt;a href="http://twitter.github.com/bootstrap/scaffolding.html#grid"&gt;grid&lt;/a&gt;". You create a "row" div, and inside that row you place your "span*" columns. Each span element spans from 1 to 12 columns, and should always add up to 12 for each row. You can also offset columns. There are css classes for large displays (1200px or higher), normal/default displays (980px), and smaller displays such as tablets (768px) or phones (480px). Elements can be made visible or hidden based on the device acessing the site (phone, tablet, or desktop). There is also a &lt;a href="http://twitter.github.com/bootstrap/javascript.html" title="Bootstrap Javascript"&gt;javascript&lt;/a&gt; component you can use for making the page more interactive.&lt;/p&gt;
&lt;p&gt;If you download bootstrap, you get a collection of files to choose from. There's js/bootstrap.js, img/glyphicons-halflings.png, img/glyphicons-halflings-white.png, css/bootstrap.css, css/bootstrap-responsive.css. There is also a compress .min. version of the javascript and css files. You can read further about the &lt;a href="http://twitter.github.com/bootstrap/scaffolding.html#responsive"&gt;responsive&lt;/a&gt; version of the css, or how to use the &lt;a href="http://twitter.github.com/bootstrap/base-css.html#icons"&gt;icons&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Normally, one would take these downloaded files and put them into their own web application directory tree. However, there is a better way. Unless you are planning to use this on an Intranet with limited Internet access, you can use a copy of these files hosted on a "content delivery network (CDN)". A good example of this is the &lt;a href="http://jquery.org/"&gt;jQuery&lt;/a&gt; library hosted on Google's CDN. Google has a number of &lt;a href="https://developers.google.com/speed/libraries/devguide"&gt;hosted libraries&lt;/a&gt; on their network. This has several advantages, one of which being caching. If everyone is pointing at a common hosted library, that library gets cached on the end-user's machine instead of being reloaded on every site that uses that library. &lt;/p&gt;
&lt;p&gt;While bootstrap is not hosted on google, there is another CDN running on &lt;a href="http://www.cloudflare.com"&gt;CloudFlare&lt;/a&gt; called &lt;a href="http://cdnjs.com/"&gt;cdnjs&lt;/a&gt; that provides a lot of the "less popular" frameworks, including bootstrap. Here are the URLs to the most current version of bootstrap files (they have version 2.0.0 through 2.1.1 currently).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap.css&lt;/li&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap.min.css&lt;/li&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap-responsive.css&lt;/li&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap-responsive.min.css&lt;/li&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/bootstrap.js&lt;/li&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/bootstrap.min.css&lt;/li&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/img/glyphicons-halflings-white.png&lt;/li&gt;
&lt;li&gt;http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/img/glyphicons-halflings.png&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All one has to do in order to use these is to add the css and the javascript (optional) to their page. Since most CDNs support both http and https, you can leave the protocol identifier out.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap.min.css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/bootstrap.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's an example you can use on your own.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container-fluid&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;row-fluid&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;span12 label label-info&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;row-fluid&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;span2&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                left column
                &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-arrow-left&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;span6&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;center column

                &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-tasks&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hero-unit&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is hero unit&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
                 &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;It is pretty emphasized&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

                &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;still in the center, but not so heroic&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;span4&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                right column
                &lt;span class="nt"&gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;icon-arrow-right&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="c"&gt;&amp;lt;!-- end container --&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- load everything at end for fast content loading --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/css/bootstrap.min.css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.1.1/bootstrap.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, I found that &lt;a href="http://www.netdna.com/"&gt;NetDNA&lt;/a&gt; also hosts bootstrap on their CDN at [www.bootstrapcdn.com]. I would say that either CDN would be fairly reliable, as they are both sponsored by their CDN they are running on. One advantage of this site is that they provide a lot more than just the basic bootstrap hosting such as custom themes and fonts.&lt;/p&gt;
&lt;p&gt;To use them, you can simply swap out your css and js scripts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//netdna.bootstrapcdn.com/twitter-bootstrap/2.1.1/css/bootstrap-combined.min.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//netdna.bootstrapcdn.com/twitter-bootstrap/2.1.1/js/bootstrap.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; I added jquery into the above examples because several parts of bootstrap rely on it (such as the Modal dialogs).&lt;/p&gt;
&lt;p&gt;20120918&lt;/p&gt;</summary></entry><entry><title>python console import tip</title><link href="http://www.yourtech.us//2012/08/python-console-import-tip.html" rel="alternate"></link><updated>2012-08-29T18:30:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-08-29:/2012/08/python-console-import-tip.html</id><summary type="html">&lt;p&gt;This is a quick little python tip. When experimenting with python commands and modules, it's usually easiest to use the python console interactively, then create your programs later. The downside of this is that sometimes you have to do a bit of typing before you get to the specific command you want to try.&lt;/p&gt;
&lt;p&gt;Imagine the following example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7.3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Aug&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.6.3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;pysphere&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VIServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;vc1.example.com&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_server_type&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_api_version&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;VMware&lt;/span&gt; &lt;span class="n"&gt;vCenter&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, I had to type in 3 lines, including my password in plaintext, to test out querying the server. I can't demonstrate this live, because then I reveal my password. Well last week, I made a [test1.py] file that reads a yaml configuration file and does the commands I just did. Here's the smart bit. I can import that file directly into the python console. Once it imports, it runs each python command and leaves me in the console, ready to query the system again. The only caveat is that my "server" variable is now part of the test1 module as "test1.server".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7.3&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Aug&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.6.3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;help&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;credits&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;license&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;test1&lt;/span&gt;
&lt;span class="n"&gt;VMware&lt;/span&gt; &lt;span class="n"&gt;vCenter&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;
&lt;span class="n"&gt;puppet1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;centos6&lt;/span&gt; &lt;span class="mf"&gt;10.100.0.206&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_connected&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;True&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;vmlist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_registered_vms&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;vmlist&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;244&lt;/span&gt;&lt;span class="n"&gt;gb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;raid10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;rhel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;puppet1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;rhel&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;puppet1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vmx&lt;/span&gt;  
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;244&lt;/span&gt;&lt;span class="n"&gt;gb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;raid10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ubuntu&lt;/span&gt; &lt;span class="mf"&gt;12.04&lt;/span&gt;&lt;span class="n"&gt;LTS&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ubuntu&lt;/span&gt; &lt;span class="mf"&gt;12.04&lt;/span&gt;&lt;span class="n"&gt;LTS&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vmx&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;iscsi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;488&lt;/span&gt;&lt;span class="n"&gt;gb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;raid10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;puppet3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;solaris11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;puppet3&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;solaris11&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vmx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python console"></category><category term="python"></category><category term="import"></category><category term="pysphere"></category></entry><entry><title>pysphere - VMWare in Python</title><link href="http://www.yourtech.us//2012/08/pysphere-vmware-in-python.html" rel="alternate"></link><updated>2012-08-23T22:30:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-08-23:/2012/08/pysphere-vmware-in-python.html</id><summary type="html">&lt;p&gt;I do a good bit of work with VMWare vSphere and I've been wanting to
work more with their API. Everything (except console) that you can do in
the vSphere client, you should be able to do through a web-based API.&lt;br /&gt;
Unfortunately, it seems that VMWare does not provide an SDK for Python,
my current language of choice. I could work in Perl or Java, but I want
to develop a web application, which I don't want to do in Perl.
Fortunately, I found &lt;a href="http://code.google.com/p/pysphere/wiki/GettingStarted"&gt;pysphere&lt;/a&gt;, which is a fairly active project of
implementing the VI API in python. It might not fully implement the API,
but it looks relatively stable and easy to implement. Plus, if I find
any functionality missing, I can extend the class directly.&lt;br /&gt;
I followed their &lt;a href="http://code.google.com/p/pysphere/wiki/GettingStarted"&gt;Getting Started&lt;/a&gt; page to get it installed
and get connected, but I didn't like having my password right there in
my working code. This was easily resolved by installing &lt;a href="http://pyyaml.org/wiki/PyYAML"&gt;PyYaml&lt;/a&gt; and
creating a config.yaml file. Then, it was just a matter of following
along with the examples to make a good test script.&lt;br /&gt;
My config.yaml:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;esxi1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;example&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;john&lt;/span&gt;
&lt;span class="n"&gt;pass&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;My test.py:  &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;yaml&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pysphere&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;config.yaml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yaml&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VIServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;server&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_server_type&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_api_version&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;vm1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_vm_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;puppet1-centos6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;vm1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;vm1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_property&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ip_address&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;And does it work?  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;VMware&lt;/span&gt; &lt;span class="n"&gt;vCenter&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;
&lt;span class="n"&gt;puppet1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;centos6&lt;/span&gt; &lt;span class="mf"&gt;10.100.0.206&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I was even able to go so far as cloning a vm (vm2 = vm1.clone('new vm'))
and can already see massive possibilities with this library in its
current state. The API can be queried much like a simple database, and
objects acted upon with simple statements. Operations like my vm clone
can be setup as a task and run asynchrously. I could easily see
integrating this with something like &lt;a href="http://www.tornadoweb.org/"&gt;tornado&lt;/a&gt;, &lt;a href="http://twistedmatrix.com/"&gt;twisted&lt;/a&gt;, or even
&lt;a href="http://cyclone.io/"&gt;cyclone&lt;/a&gt; to make a non-blocking web framework.&lt;/p&gt;</summary><category term="api"></category><category term="python"></category><category term="programming"></category><category term="vmware"></category><category term="pysphere"></category></entry><entry><title>Upgrade Redmine</title><link href="http://www.yourtech.us//2012/08/upgrade-redmine.html" rel="alternate"></link><updated>2012-08-09T03:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-08-09:/2012/08/upgrade-redmine.html</id><summary type="html">&lt;p&gt;Currently, I have Redmine version redmine 1.3.3 installed via the
&lt;a href="https://launchpad.net/~ondrej/+archive/redmine" title="ppa:ondrej/redmine"&gt;ondrej/redmine PPA&lt;/a&gt;. I have been wanting to upgrade to the 2.x series
of redmine, but no PPA currently exists for it. Redmine is officially
provided by Ubuntu, but the version for Precise is 1.3.2, and Ondřej's
PPA is on 1.4.3. While I usually prefer to have my software installation
and updates handled by packages, it looks like to get to the 2.x series,
I'll have to go back to source.&lt;/p&gt;
&lt;p&gt;I will be following the &lt;a href="http://www.redmine.org/projects/redmine/wiki/RedmineUpgrade" title="Upgrade to 2.x"&gt;official upgrade guide&lt;/a&gt; closely, but with a
few variations.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The apt-get/ppa version uses multiple file locations for source code
    and configuration. I'll have to consolidate to one place.&lt;/li&gt;
&lt;li&gt;My ruby and passenger modules were installed and modified to work
    with the ppa version of redmine. Adjustments will be needed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My ruby version is 1.8.7 (1.8.7 min), rails 2.3.14 (2.3.6 min) and gem
1.8.15 (1.8 min. Already having the minimum requirements makes this a
bit easier.&lt;/p&gt;
&lt;p&gt;After performing a mysql backup (hint: database.yml is in
/etc/redmine/default), I downloaded redmine to /usr/local/redmine-2.0. I
also decided to stop Apache so that Passenger wouldn't be running the
existing redmine instance. If I had other sites running on this server,
I would have disabled this virtual host or put up a maintenance page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I didn't have any plugins, but if I did they would either be in
/usr/share/redmine/vendor/plugins or /usr/share/redmine/lib/plugins. I
do intend to install a couple plugins when I get into 2.x though.&lt;/p&gt;
&lt;p&gt;I found in step 3 that the rake commands didn't work. This is probably
because I wasn't working from an existing rails directory. I went to the
&lt;a href="http://www.redmine.org/projects/redmine/wiki/RedmineInstall" title="Install Guide"&gt;Redmine Installer&lt;/a&gt; page, which gave me the answer. "Since 1.4.0,
Redmine uses Bundler to manage gems dependencies. You need to install
&lt;a href="http://gembundler.com/"&gt;Bundler&lt;/a&gt; first.".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;
&lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;/*&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I ran into an error when bundle was installing json 1.7.4.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;bundler&lt;/span&gt;
&lt;span class="cp"&gt;# run the next command from /usr/local/redmine-2.0&lt;/span&gt;
&lt;span class="cp"&gt;# it reads the file &amp;quot;Gemfile&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;bundle&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;without&lt;/span&gt; &lt;span class="n"&gt;development&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;According to an &lt;a href="http://ruby.about.com/od/faqs/qt/Extconf-Rb-1-In-Require-No-Such-File-To-Load-Mkmf-Loaderror.htm"&gt;about.com page&lt;/a&gt;, I need build-essentials,
libopenssl-ruby, and ruby1.8-dev installed. The one I was missing was
ruby1.8-dev. This is easily fixed with an &lt;code&gt;apt-get install ruby1.8-dev&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I had to install the following other packages for certain gems. The
Gemfile includes items for postgresql and sqlite, even if you don't use
it. The &lt;a href="http://www.redmine.org/projects/redmine/wiki/RedmineInstall" title="Install Guide"&gt;install guide&lt;/a&gt; lets you know that you can
skip these with the --without option. You would just add "pg sqlite
rmagick" to the end of your bundle install line (above).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;json: build-essentials, libopenssl-ruby, and ruby1.8-dev&lt;/li&gt;
&lt;li&gt;mysql: libmysqlclient-dev&lt;/li&gt;
&lt;li&gt;pg: libpq-dev (alternatively: add pg to the --without list)&lt;/li&gt;
&lt;li&gt;rmagick: libmagickcore-dev, libmagickwand-dev (alternatively: add
    rmagick to the --without list)&lt;/li&gt;
&lt;li&gt;sqlite: libsqlite3-dev&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once we got Bundler installed and all the required gems, we switch back
to the &lt;a href="http://www.redmine.org/projects/redmine/wiki/RedmineUpgrade" title="Upgrade to 2.x"&gt;Upgrade Guide&lt;/a&gt; to update our session
store and migrate the database. I had no plugins, so I'm skipping that
step.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ruby1&lt;/span&gt;&lt;span class="mf"&gt;.8&lt;/span&gt; &lt;span class="n"&gt;extconf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;
&lt;span class="n"&gt;extconf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;require&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;mkmf&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LoadError&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;extconf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's start this locally before we mess with passenger or apache (be
sure to allow port 3000 via iptables or ufw).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;generate_secret_token&lt;/span&gt;
&lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;migrate&lt;/span&gt; &lt;span class="n"&gt;RAILS_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;production&lt;/span&gt; 
&lt;span class="cp"&gt;# unecessary, as this is a new directory, but why not clean up?&lt;/span&gt;
&lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;
&lt;span class="n"&gt;rake&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;sessions&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This worked without a hitch for me. Now on to my passenger setup. I
already has this configured and installed previously, so all I have to
do is change my VirtualHost directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ServerName&lt;/span&gt; &lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="n"&gt;DocumentRoot&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;redmine&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;public&lt;/span&gt;
&lt;span class="n"&gt;RailsSpawnMethod&lt;/span&gt; &lt;span class="n"&gt;smart&lt;/span&gt;
&lt;span class="cp"&gt;# Keep the application instances alive longer. Default is 300 (seconds)&lt;/span&gt;
&lt;span class="n"&gt;PassengerPoolIdleTime&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;span class="n"&gt;RailsAppSpawnerIdleTime&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;RailsFrameworkSpawnerIdleTime&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;PassengerMaxRequests&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;
&lt;span class="n"&gt;PassengerStatThrottleRate&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;

        &lt;span class="n"&gt;AllowOverride&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt;
        &lt;span class="n"&gt;Options&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;MultiViews&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I did have to change a few permisssions (all files installed as owned by
root)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;chgrp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;
&lt;span class="n"&gt;chown&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;
&lt;span class="n"&gt;chown&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Markdown Blogging</title><link href="http://www.yourtech.us//2012/08/markdown-blogging.html" rel="alternate"></link><updated>2012-08-06T00:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-08-06:/2012/08/markdown-blogging.html</id><summary type="html">&lt;p&gt;I recently have started a process of migrating my website over to
&lt;a href="http://www.blogger.com/"&gt;blogger.com&lt;/a&gt;. One of the main reasons for this was because in my last
server move, I had broken my Movable Type installation, and found myself
too busy to fix it. I found I didn't want to spend my time fixing and
updating blogging software. I wanted to work on my projects, write them
up, and post them. It was time to move my content to an existing
platform that handled the back end. I looked at a few, and decided
blogger.com would be as good as any other service.&lt;br /&gt;
It only took a short time to setup a blog, point a CNAME at it, and then
to import my existing posts. When I started creating some new posts, I
immediately ran into some limitations.  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You used to be able to edit permalinks on blogger. Now, you can only
    do that before you publish. The only way to change a permalink after
    publishing is to create a new post with the desired permalink and
    delete the old one.&lt;/li&gt;
&lt;li&gt;Blogger has no built in formatting for code blocks. So if I want to
    show a config file, source code, or terminal session log, I have to
    fiddle with changing fonts, size, and "blockquote" to get it
    presentable. Even then, you run the risk of strange formatting of
    your raw text.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I found a solution that other bloggers use called &lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/"&gt;SyntaxHighlighter&lt;/a&gt;.
This is a combination of javascript and css code that takes text within
your   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;gives&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;nice&lt;/span&gt; &lt;span class="n"&gt;looking&lt;/span&gt; &lt;span class="n"&gt;blocks&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;highlighted&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optionally&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;catch&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;along&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;perl&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;brush&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;go&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;angle&lt;/span&gt; &lt;span class="n"&gt;bracks&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;their&lt;/span&gt; &lt;span class="n"&gt;HTML&lt;/span&gt; &lt;span class="n"&gt;escaped&lt;/span&gt; &lt;span class="n"&gt;equivalents&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;They&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;around&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;SCRIPT&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;CDATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;takes&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;getting&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Adding&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;requires&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;few&lt;/span&gt; &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I rather liked syntaxhighlighter, but it still seemed like I had to do a
lot of manual work with the code. Also, I had to select the brush each
time. Couldn't it guess? Notepad++ and some others will guess at what
language you're using and highlight accordingly. I found something
called &lt;a href="http://www.geany.org/" title="Geany"&gt;prettify&lt;/a&gt; that does just that. You only need to load one js
file and one css file. Prettify works off of either   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;or&lt;/span&gt;  &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;similar&lt;/span&gt; &lt;span class="n"&gt;limitations&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;SyntaxHighlighter&lt;/span&gt; &lt;span class="n"&gt;regarding&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;However&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;advantage&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;being&lt;/span&gt; &lt;span class="n"&gt;able&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;guess&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Being able to use this code made my posts look much nicer, but the
entire process got me thinking. The way I "document" most of projects
typically invole using a notepad editor like &lt;a href="http://www.geany.org/" title="Geany"&gt;Geany&lt;/a&gt; or
&lt;a href="http://notepad-plus-plus.org/" title="Notepad++"&gt;Notepad++&lt;/a&gt;. As I work, I add notes, copy in source code or shell
comands, and do everything in a plain text editor. Later, I add
commentary and clean up the document. I take this and paste it into the
WYSIWYG editor on blogger. Finally, I have to keep switching between
compose and html mode to get my text looking suitable. There are too
many steps for me to want to do this consistently. All I really want to
do is take my text file, add a little formatting in a few spots, a few
hyperlinks in others, and post it.&lt;br /&gt;
Enter &lt;a href="http://daringfireball.net/projects/markdown/" title="Markdown intro"&gt;markdown&lt;/a&gt;. &lt;em&gt;Markdown is a text-to-HTML conversion tool for web
writers. Markdown allows you to write using an easy-to-read,
easy-to-write plain text format, then convert it to structurally valid
XHTML (or HTML)&lt;/em&gt;. I have used this before, but didn't pay it close
enough attention. It's used on github and reddit, there are plugins for
it in dokuwiki and redmine. The idea is you write in text, adding
formatting using the markdown syntax. This format is both human readable
and machine readable. When read by the appropriate library, clean html
is generated. It also has a feature for wrapping blocks of code inside
of   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;escaping&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="n"&gt;inside&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;those&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Within the MarkDown project is a paged called "&lt;a href="http://daringfireball.net/projects/markdown/dingus"&gt;dingus&lt;/a&gt;" which means
"placeholder". You can paste your markdown text into one textarea and
get the generated html plus a preview back. I tested pasting that
generated html into Blogger's HTML box and it seems to work perfectly
fine. What this means is that I can type up my documentation completely
within my text editor of choice, save it locally, and then generate my
html code to paste into blogger.&lt;br /&gt;
Some of you may have realized that my   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="nb"&gt;tags&lt;/span&gt; &lt;span class="nx"&gt;are&lt;/span&gt; &lt;span class="nx"&gt;missing&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt; &lt;span class="nb"&gt;class&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Well&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;generated&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nb"&gt;search&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;replace&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt;  &lt;span class="k"&gt;with&lt;/span&gt;  &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nx"&gt;then&lt;/span&gt; &lt;span class="nx"&gt;paste&lt;/span&gt; &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;but&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s adding more steps. Instead, I sought to make my own dingus that does this automatically. I found that there is an extension of markdown called Markdown Extra written in PHP. Extra adds a few features such as simple tables, but remains consistent with original Markdown formatting. Using that library, I was able to create my own dingus rather easily and alter the  tag with one line of code $render2 = str_replace(&amp;quot;&amp;lt;pre&amp;gt;&amp;quot;, &amp;quot;&amp;lt;pre class=&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;prettyprint linenums&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s1"&gt;&amp;gt;&amp;quot;, $render);. In my experimentation, I made a parser that reads a text file and outputs html, and three dingus parsers. Dingus1 does straightforward conversion of markdown extra to html. Dingus2 and 3 provide the class names for prettified code, with #3 going the extra step of applying stylesheets for the preview.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this setup, I can quickly paste in my text document and pull html
code to paste into blogger.com's html edit box. With some more research,
I can modify the dingus to interact with blogger's API and post on my
behalf. There are also some WYSIWYM live editors that show you an
instant render of your markdown as you type (you type in a textarea
while your html renders in a nearby div). This would be a good way to do
some tweaking to the markdown text before posting the html to the web.
My next plans are to make a better dingus, possibly with a live preview
and a "post to blogger" option.&lt;br /&gt;
Some other links:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://balupton.github.com/jquery-syntaxhighlighter/demo/&lt;/li&gt;
&lt;li&gt;http://code.google.com/p/pagedown/wiki/PageDown&lt;/li&gt;
&lt;li&gt;http://markitup.jaysalvat.com/examples/markdown/&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Gate One supervisor script</title><link href="http://www.yourtech.us//2012/08/gate-one-supervisor-script.html" rel="alternate"></link><updated>2012-08-02T07:10:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-08-02:/2012/08/gate-one-supervisor-script.html</id><summary type="html">&lt;p&gt;Yesterday, I &lt;a href="http://blog.yourtech.us/2012/08/exploring-gateone-browser-ssh-terminal.html"&gt;setup gateone&lt;/a&gt; to run as a non-root user. I also spent
some time looking at potential init scripts for starting and stopping
this. The gateone project does not currently provide any init scripts,
but this is planned for the future ([Issue #47]). I tried to use one
of the scripts in that thread, but I wasn't really pleased with them.
The big issue is that gateone.py doesn't fork. However, I believe there
is a better solution.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.supervisord.org/"&gt;supervisord&lt;/a&gt; is a python script designed to control and monitor
non-daemonizing python scripts. As Gate One is a foreground only
process, it seems particularly suited to this task - more so than
writing my own script in python or daemontools.&lt;/p&gt;
&lt;p&gt;Installation can be done with python-pip or easy_install. On newer
systems, pip is recommended.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;supervisor&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On Ubuntu, pip installs supervisord to /usr/local/bin. By default,
/usr/local/bin is not in root's path, so it makes sense (to me at least)
to create symlinks to /usr/sbin.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;span class="n"&gt;echo_supervisord_conf&lt;/span&gt;  &lt;span class="n"&gt;pidproxy&lt;/span&gt;  &lt;span class="n"&gt;supervisorctl&lt;/span&gt;  
&lt;span class="n"&gt;supervisordjohnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;supervisord&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;supervisorctl&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we need to create a configuration file. Supervisord has a utility
to generate a sample one.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;echo_supervisord_conf&lt;/span&gt;  &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;supervisord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To get started, we can use the sample configuration and just add a
couple lines to the bottom for gateone.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;program&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
 &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;
 &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;   &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Add&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;setuid&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, copy supervisord.conf to /etc/supervisord.conf and start
supervisord. Make sure gateone.py is not currently running. Then we'll
run supervisorctl to test things out.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;cp&lt;/span&gt; &lt;span class="n"&gt;supervisord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;supervisord&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;supervisorctl&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;
&lt;span class="n"&gt;gateone&lt;/span&gt;                          &lt;span class="n"&gt;RUNNING&lt;/span&gt;    &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="mi"&gt;9549&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;uptime&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;05&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;
 &lt;span class="mi"&gt;9549&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;        &lt;span class="n"&gt;Sl&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;supervisorctl&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;
&lt;span class="nl"&gt;gateone:&lt;/span&gt; &lt;span class="n"&gt;stopped&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;
 &lt;span class="mi"&gt;9605&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt;        &lt;span class="n"&gt;Ss&lt;/span&gt;     &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;dtach&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dtach_3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;none&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh_connect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;/%&lt;/span&gt;&lt;span class="n"&gt;SHORT_SOCKET&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;sshfp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oUserKnownHostsFile&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;user1&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;known_hosts&lt;/span&gt;
 &lt;span class="mi"&gt;9606&lt;/span&gt; &lt;span class="n"&gt;pts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;    &lt;span class="n"&gt;Ss&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh_connect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;/%&lt;/span&gt;&lt;span class="n"&gt;SHORT_SOCKET&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;sshfp&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oUserKnownHostsFile&lt;/span&gt;&lt;span class="o"&gt;=/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;user1&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;known_hosts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this example, we see that gateone.py is started and stopped by
supervisorctl, but because we have dtach enabled, our sessions are still
in place. If we restart gateone.py, we can connect to it again and have
our sessions resumed. While we could probably configure supervisord to
kill these terminals, I believe we'd normally want to keep them running.
The few times I would want to stop those terminals would be a) manually
reconfiguring/troubleshooting opengate, b) updating software, or c)
rebooting the server. For a&amp;amp;b, running the command "gateone.py -kill"
will kill those terminals. For a server shutdown or reboot, the act of
shutting down the OS will kill these terminals.&lt;/p&gt;
&lt;p&gt;Finally, we need a way to start and stop supervisord itself.
Fortunately, the supervisord project has provided a number of &lt;a href="https://github.com/Supervisor/initscripts"&gt;init
scripts&lt;/a&gt;. I was able to use the &lt;a href="https://raw.github.com/Supervisor/initscripts/master/debian-norrgard"&gt;Debian script&lt;/a&gt; in Ubuntu with only
a few minor changes.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I had symlinked supervisord and supervisorctl to /usr/sbin. The
    script expects them in /usr/bin (but even says that /usr/sbin is a
    better location). I had to change /usr/bin to /usr/sbin.
    Alternatively, you can symlink the files into /usr/bin&lt;/li&gt;
&lt;li&gt;I added a status option that runs \$SUPERVISORCTL status&lt;/li&gt;
&lt;li&gt;If you started supervisord manually, you must shut it down and start
    it with the script. The script won't be able to stop supervisord
    unless /var/run/supervisord.pid is current.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here is my complete init script for Ubuntu:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c"&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class="c"&gt;# Provides:          supervisord&lt;/span&gt;
&lt;span class="c"&gt;# Required-Start:    $local_fs $remote_fs $networking&lt;/span&gt;
&lt;span class="c"&gt;# Required-Stop:     $local_fs $remote_fs $networking&lt;/span&gt;
&lt;span class="c"&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class="c"&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class="c"&gt;# Short-Description: Starts supervisord - see http://supervisord.org&lt;/span&gt;
&lt;span class="c"&gt;# Description:       Starts and stops supervisord as needed &lt;/span&gt;
&lt;span class="c"&gt;### END INIT INFO&lt;/span&gt;
&lt;span class="c"&gt;# Author: Leonard Norrgard &lt;/span&gt;
&lt;span class="c"&gt;# Version 1.0-alpha&lt;/span&gt;
&lt;span class="c"&gt;# Based on the /etc/init.d/skeleton script in Debian.&lt;/span&gt;
&lt;span class="c"&gt;# Please note: This script is not yet well tested. What little testing&lt;/span&gt;
&lt;span class="c"&gt;# that actually was done was only on supervisor 2.2b1.&lt;/span&gt;
&lt;span class="c"&gt;# Do NOT &amp;quot;set -e&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;# PATH should only include /usr/* if it runs after the mountnfs.sh script&lt;/span&gt;
&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/sbin:/usr/sbin:/bin:/usr/bin
&lt;span class="nv"&gt;DESC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Run a set of applications as daemons.&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;supervisord
&lt;span class="c"&gt;# Supervisord is installed in /usr/bin by default, but /usr/sbin would &lt;/span&gt;
&lt;span class="c"&gt;# make more sense&lt;/span&gt;
&lt;span class="nv"&gt;DAEMON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/sbin/&lt;span class="nv"&gt;$NAME&lt;/span&gt;   
&lt;span class="nv"&gt;SUPERVISORCTL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/sbin/supervisorctl
&lt;span class="nv"&gt;PIDFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/&lt;span class="nv"&gt;$NAME&lt;/span&gt;.pid
&lt;span class="nv"&gt;DAEMON_ARGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--pidfile ${PIDFILE}&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;SCRIPTNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/init.d/&lt;span class="nv"&gt;$NAME&lt;/span&gt;
&lt;span class="c"&gt;# Exit if the package is not installed&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; -x &lt;span class="s2"&gt;&amp;quot;$DAEMON&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;0
&lt;span class="c"&gt;# Read configuration variable file if it is present&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; -r /etc/default/&lt;span class="nv"&gt;$NAME&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . /etc/default/&lt;span class="nv"&gt;$NAME&lt;/span&gt;
&lt;span class="c"&gt;# Load the VERBOSE setting and other rcS variables&lt;/span&gt;
. /lib/init/vars.sh
&lt;span class="c"&gt;# Define LSB log_* functions.&lt;/span&gt;
&lt;span class="c"&gt;# Depend on lsb-base (&amp;gt;= 3.0-6) to ensure that this file is present.&lt;/span&gt;
. /lib/lsb/init-functions
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Function that starts the daemon/service&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
do_start&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;# Return&lt;/span&gt;
        &lt;span class="c"&gt;#   0 if daemon has been started&lt;/span&gt;
        &lt;span class="c"&gt;#   1 if daemon was already running&lt;/span&gt;
        &lt;span class="c"&gt;#   2 if daemon could not be started&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;return &lt;/span&gt;1
        start-stop-daemon --start --quiet --pidfile &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; --exec &lt;span class="nv"&gt;$DAEMON&lt;/span&gt; -- &lt;span class="se"&gt;\&lt;/span&gt;
                &lt;span class="nv"&gt;$DAEMON_ARGS&lt;/span&gt;  &lt;span class="se"&gt;\&lt;/span&gt;
                &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return &lt;/span&gt;2
        &lt;span class="c"&gt;# Add code here, if necessary, that waits for the process to be ready&lt;/span&gt;
        &lt;span class="c"&gt;# to handle requests from services started subsequently which depend&lt;/span&gt;
        &lt;span class="c"&gt;# on this one.  As a last resort, sleep for some time.&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Function that stops the daemon/service&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
do_stop&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;# Return&lt;/span&gt;
        &lt;span class="c"&gt;#   0 if daemon has been stopped&lt;/span&gt;
        &lt;span class="c"&gt;#   1 if daemon was already stopped&lt;/span&gt;
        &lt;span class="c"&gt;#   2 if daemon could not be stopped&lt;/span&gt;
        &lt;span class="c"&gt;#   other if a failure occurred&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; -e &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return &lt;/span&gt;1
        &lt;span class="c"&gt;# Stop all processes under supervisord control.&lt;/span&gt;
        &lt;span class="nv"&gt;$SUPERVISORCTL&lt;/span&gt; stop all
        start-stop-daemon --stop --quiet --retry&lt;span class="o"&gt;=&lt;/span&gt;TERM/30/KILL/5 --pidfile &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;
             --name &lt;span class="nv"&gt;$NAME&lt;/span&gt;
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$RETVAL&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2 &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;return &lt;/span&gt;2
        &lt;span class="c"&gt;# Wait for children to finish too if this is a daemon that forks&lt;/span&gt;
        &lt;span class="c"&gt;# and if the daemon is only ever run from this initscript.&lt;/span&gt;
        &lt;span class="c"&gt;# If the above conditions are not satisfied then add some other code&lt;/span&gt;
        &lt;span class="c"&gt;# that waits for the process to drop all resources that could be&lt;/span&gt;
        &lt;span class="c"&gt;# needed by services started subsequently.  A last resort is to&lt;/span&gt;
        &lt;span class="c"&gt;# sleep for some time.&lt;/span&gt;
        start-stop-daemon --stop --quiet --oknodo --retry&lt;span class="o"&gt;=&lt;/span&gt;0/30/KILL/5 --exec &lt;span class="nv"&gt;$DAEMON&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 2 &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;return &lt;/span&gt;2
        &lt;span class="c"&gt;# Many daemons don&amp;#39;t delete their pidfiles when they exit.&lt;/span&gt;
        rm -f &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$RETVAL&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
&lt;span class="c"&gt;# Function that sends a SIGHUP to the daemon/service&lt;/span&gt;
&lt;span class="c"&gt;#&lt;/span&gt;
do_reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c"&gt;#&lt;/span&gt;
        &lt;span class="c"&gt;# If the daemon can reload its configuration without&lt;/span&gt;
        &lt;span class="c"&gt;# restarting (for example, when it is sent a SIGHUP),&lt;/span&gt;
        &lt;span class="c"&gt;# then implement that here.&lt;/span&gt;
        &lt;span class="c"&gt;#&lt;/span&gt;
        start-stop-daemon --stop --signal 1 --quiet --pidfile &lt;span class="nv"&gt;$PIDFILE&lt;/span&gt; --name &lt;span class="nv"&gt;$NAME&lt;/span&gt;
        &lt;span class="k"&gt;return &lt;/span&gt;0
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; in
  start&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$VERBOSE&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; no &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; log_daemon_msg &lt;span class="s2"&gt;&amp;quot;Starting $DESC&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$NAME&amp;quot;&lt;/span&gt;
        do_start
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; in
                0|1&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$VERBOSE&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; no &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; log_end_msg 0 ;;
                2&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$VERBOSE&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; no &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; log_end_msg 1 ;;
        &lt;span class="k"&gt;esac&lt;/span&gt;
        ;;
  stop&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$VERBOSE&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; no &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; log_daemon_msg &lt;span class="s2"&gt;&amp;quot;Stopping $DESC&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$NAME&amp;quot;&lt;/span&gt;
        do_stop
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; in
                0|1&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$VERBOSE&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; no &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; log_end_msg 0 ;;
                2&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$VERBOSE&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; no &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; log_end_msg 1 ;;
        &lt;span class="k"&gt;esac&lt;/span&gt;
        ;;
  &lt;span class="c"&gt;#reload|force-reload)&lt;/span&gt;
        &lt;span class="c"&gt;#&lt;/span&gt;
        &lt;span class="c"&gt;# If do_reload() is not implemented then leave this commented out&lt;/span&gt;
        &lt;span class="c"&gt;# and leave &amp;#39;force-reload&amp;#39; as an alias for &amp;#39;restart&amp;#39;.&lt;/span&gt;
        &lt;span class="c"&gt;#&lt;/span&gt;
        &lt;span class="c"&gt;#log_daemon_msg &amp;quot;Reloading $DESC&amp;quot; &amp;quot;$NAME&amp;quot;&lt;/span&gt;
        &lt;span class="c"&gt;#do_reload&lt;/span&gt;
        &lt;span class="c"&gt;#log_end_msg $?&lt;/span&gt;
        &lt;span class="c"&gt;#;;&lt;/span&gt;
  restart|force-reload&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;#&lt;/span&gt;
        &lt;span class="c"&gt;# If the &amp;quot;reload&amp;quot; option is implemented then remove the&lt;/span&gt;
        &lt;span class="c"&gt;# &amp;#39;force-reload&amp;#39; alias&lt;/span&gt;
        &lt;span class="c"&gt;#&lt;/span&gt;
        log_daemon_msg &lt;span class="s2"&gt;&amp;quot;Restarting $DESC&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$NAME&amp;quot;&lt;/span&gt;
        do_stop
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; in
          0|1&lt;span class="o"&gt;)&lt;/span&gt;
                do_start
                &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$?&amp;quot;&lt;/span&gt; in
                        0&lt;span class="o"&gt;)&lt;/span&gt; log_end_msg 0 ;;
                        1&lt;span class="o"&gt;)&lt;/span&gt; log_end_msg 1 ;; &lt;span class="c"&gt;# Old process is still running&lt;/span&gt;
                        *&lt;span class="o"&gt;)&lt;/span&gt; log_end_msg 1 ;; &lt;span class="c"&gt;# Failed to start&lt;/span&gt;
                &lt;span class="k"&gt;esac&lt;/span&gt;
                ;;
          *&lt;span class="o"&gt;)&lt;/span&gt;
                &lt;span class="c"&gt;# Failed to stop&lt;/span&gt;
                log_end_msg 1
                ;;
        &lt;span class="k"&gt;esac&lt;/span&gt;
        ;;
  status&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;$SUPERVISORCTL&lt;/span&gt; status
        &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
        ;;
  *&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;#echo &amp;quot;Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}&amp;quot; &amp;gt;&amp;amp;2&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: $SCRIPTNAME {start|stop|restart|force-reload|status}&amp;quot;&lt;/span&gt; &amp;gt;&amp;amp;2
        &lt;span class="nb"&gt;exit &lt;/span&gt;3
        ;;
&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;And here is a complete copy of my supervisord.conf file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[unix_http_server]&lt;/span&gt;
&lt;span class="na"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/tmp/supervisor.sock   ; (the path to the socket file)&lt;/span&gt;
&lt;span class="k"&gt;[supervisord]&lt;/span&gt;
&lt;span class="na"&gt;logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)&lt;/span&gt;
&lt;span class="na"&gt;logfile_maxbytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;50MB        ; (max main logfile bytes b4 rotation;default 50MB)&lt;/span&gt;
&lt;span class="na"&gt;logfile_backups&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;10           ; (num of main logfile rotation backups;default 10)&lt;/span&gt;
&lt;span class="na"&gt;loglevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;info                ; (log level;default info; others: debug,warn,trace)&lt;/span&gt;
&lt;span class="na"&gt;pidfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)&lt;/span&gt;
&lt;span class="na"&gt;nodaemon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;false               ; (start in foreground if true;default false)&lt;/span&gt;
&lt;span class="na"&gt;minfds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;1024                  ; (min. avail startup file descriptors;default 1024)&lt;/span&gt;
&lt;span class="na"&gt;minprocs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;200                 ; (min. avail process descriptors;default 200)&lt;/span&gt;
&lt;span class="k"&gt;[rpcinterface:supervisor]&lt;/span&gt;
&lt;span class="na"&gt;supervisor.rpcinterface_factory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;supervisor.rpcinterface:make_main_rpcinterface&lt;/span&gt;
&lt;span class="k"&gt;[supervisorctl]&lt;/span&gt;
&lt;span class="na"&gt;serverurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket&lt;/span&gt;
&lt;span class="k"&gt;[program:gateone]&lt;/span&gt;
&lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/opt/gateone/gateone.py&lt;/span&gt;
&lt;span class="na"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/opt/gateone&lt;/span&gt;
&lt;span class="na"&gt;stdout_logfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/opt/gateone/logs/supervisor.log&lt;/span&gt;
&lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;johnh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Exploring GateOne Browser SSH terminal</title><link href="http://www.yourtech.us//2012/08/exploring-gateone-browser-ssh-terminal.html" rel="alternate"></link><updated>2012-08-01T12:09:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-08-01:/2012/08/exploring-gateone-browser-ssh-terminal.html</id><summary type="html">&lt;p&gt;I came across a program called &lt;a href="http://liftoffsoftware.com/Products/GateOne"&gt;Gate One&lt;/a&gt; by LiftOff Software that
just amazed me. This is an open-source, web-based ssh terminal. It is
capable of multiple users, sessions, and bookmarks. I've tried a number
of AJAX terminals or Java applet based ones in the past. The javascript
ones usually did not have very good terminal emulation, while the Java
apps worked, but worked just like a local desktop app (making it's own
connection to port 22). Gate One uses WebSockets, allowing for full
duplex communication through your web browser over the same port 80 or
443 used to serve up the web page.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Gate One is a python application using the &lt;a href="http://www.tornadoweb.org/"&gt;Tornado framework&lt;/a&gt;. As
such, at runs independently of an existing web server and handles
connections from browsers internally. If you already have a web server
running on your system, you will need to tell Gate One to use a
different IP or a different port.&lt;/p&gt;
&lt;p&gt;Installation using pre-built binaries or the source is fairly
straightforward and detailed in the &lt;a href="http://liftoff.github.com/GateOne/About/index.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The installer creates a directory of /opt/gateone and places all
necessary files there. You can run it by changing to that directory and
running gateone.py as root.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;166&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;Imaging&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PIL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;displayed&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2232&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;dtach&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;dtach&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1800&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;configured&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;ANONYMOUS&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1876&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Loaded&lt;/span&gt; &lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bookmarks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logging_plugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;playback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2329&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Listening&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//*:443/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, gateone is running in the foreground and you can view as
connections occur and any errors. Pressing Ctrl If you conect to gateone
using your webbrowser, you are logged in as user ANONYMOUS and can
connect to any ssh host, either localhost or something remote.&lt;/p&gt;
&lt;p&gt;If you edit /opt/gateone/server.conf, you can change authentication to
"pam" or "google". Using pam will perform a Basic HTTP style
authenication requiring a system-level username and password. Using
google will log you in with your google account. Both of these "just
work" without complicated setup.&lt;/p&gt;
&lt;h3&gt;Running as a Non-Root&lt;/h3&gt;
&lt;p&gt;Before I put something like this in production, I wanted to apply some
additional security. First off, I want to see if I can get this to run
as a non-root user.&lt;/p&gt;
&lt;p&gt;Since gateone ran as root user initially, it has files owned by rootOnly UID 0 can open ports below 1024.gateone may need permission to write to system directories&lt;/p&gt;
&lt;p&gt;To solve the first one, I chowned the /opt/gateone directory to my
username. In the future, I'll want to run it under its own user, but
I'll use mine for now for simplicity. To solve the second and third, I
edited server.conf.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;chown&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;johnh&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="n"&gt;appropriatelyport&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2443&lt;/span&gt;&lt;span class="n"&gt;session_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/opt/gateone/tmp/gateone&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;pid_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;/opt/gateone/tmp/gateone.pid&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="n"&gt;gid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;166&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;Imaging&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PIL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;displayed&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2232&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;dtach&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;dtach&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1802&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;configured&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;ANONYMOUS&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1876&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Loaded&lt;/span&gt; &lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bookmarks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logging_plugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;playback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;06&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2329&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Listening&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//*:2443/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Authentication&lt;/h2&gt;
&lt;p&gt;Running as a lower uid, you can use authentication of None or "google"
without issue. If you use "pam", you discover you can only login with
the username that gateone is running under. If you are the only intended
user of the service, this may not be an issue. But if you want to allow
other users, this becomes an issue. If you are fine with running as root
or using Google as your authentication provider, you can ignore this
next step.&lt;/p&gt;
&lt;p&gt;Fortunately, pam is highly configurable. You aren't required to
authenticate against shadow passwords. You can also authenticate against
db4 files with pam_userdb, msyql, or even htpasswd files. To start off,
I'm going to use htpasswd files. Note that Ubuntu doesn't provide
pam_pwdfile.so by default. You need to install libpam-pwdfile ("sudo
apt-get install libpam-pwdfile").&lt;/p&gt;
&lt;h1&gt;Note - in testing, I discovered gateone uses Crypt encryption while htpasswd defaults to MD5. Use -d to switch to crypt encryption.&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;htpasswd&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt; &lt;span class="n"&gt;user1&lt;/span&gt;
&lt;span class="n"&gt;New&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Re&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Adding&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="n"&gt;user1&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passwd&lt;/span&gt;
&lt;span class="nl"&gt;user1:&lt;/span&gt;&lt;span class="n"&gt;KKEPyZtUf9sadf9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a pam module called gateone under /etc/pam.d&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;
&lt;span class="cp"&gt;#%PAM-1.0&lt;/span&gt;
&lt;span class="cp"&gt;# Login using a htpasswd file&lt;/span&gt;
&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt; &lt;span class="n"&gt;common&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sessionauth&lt;/span&gt;    
&lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="n"&gt;pam_pwdfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;          &lt;span class="n"&gt;pwdfile&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;passwdaccount&lt;/span&gt; 
&lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="n"&gt;pam_permit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Modify server.conf to use pam and pam_service of gateone:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pam&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;pam_service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;gateone&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now start gateone and log in.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;g1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Could&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="n"&gt;Imaging&lt;/span&gt; &lt;span class="n"&gt;Library&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PIL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;displayed&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;terminal&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2577&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;dtach&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;dtach&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2598&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Connections&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;allowed&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;origins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost https://localhost http://127.0.0.1 https://127.0.0.1 https://puppet2 https://127.0.1.1 https://puppet2:2443&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2023&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Using&lt;/span&gt; &lt;span class="n"&gt;pam&lt;/span&gt; &lt;span class="n"&gt;authentication&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2101&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Loaded&lt;/span&gt; &lt;span class="n"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;bookmarks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;logging_plugin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mobile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;notice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;playback&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2706&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Listening&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//*:2443/&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2710&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Process&lt;/span&gt; &lt;span class="n"&gt;running&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="mi"&gt;32591&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="mi"&gt;120801&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;949&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;WebSocket&lt;/span&gt; &lt;span class="n"&gt;opened&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user1&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gateone&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One additional nice feature with authentication enabled is the ability
to resume sessions - even across different computers or browsers.&lt;/p&gt;
&lt;h2&gt;Reverse Proxy&lt;/h2&gt;
&lt;p&gt;(I failed on this part, but felt it was worth recording)&lt;/p&gt;
&lt;p&gt;Once I got it working in single user mode, I wanted to go ahead and set
this up under a reverse proxy under Apache. This would allow me to
integrate it into my existing web server under a sub-directory.&lt;/p&gt;
&lt;p&gt;First, I edited server.conf to use a URL prefix of /g1/&lt;/p&gt;
&lt;p&gt;Second, I tried setting up a ReverseProxy in Apache.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# GateOne &lt;/span&gt;
&lt;span class="n"&gt;ProxySSLProxyEngine&lt;/span&gt; 
&lt;span class="n"&gt;OnProxyPass&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:2443/g1/&lt;/span&gt;
&lt;span class="n"&gt;ProxyPassReverse&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:2443/g1/&lt;/span&gt;
&lt;span class="n"&gt;ProxyPassReverseCookieDomain&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt; &lt;span class="n"&gt;localhost&lt;/span&gt;
&lt;span class="n"&gt;ProxyPassReverseCookiePath&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;g1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This almost worked. I had no errors, but the resulting page was
unreadable. However, at the bottom was a clue. "The WebSocket connection
was closed. Will attempt to reconnect every 5 seconds... NOTE: Some web
proxies do not work properly with WebSockets." The problem was Apache
not properly proxying my websocket connection. People have managed to
get this working under nginx, but not Apache.&lt;/p&gt;
&lt;p&gt;Searching for a solution led me to a similar question on ServerFault, an
apache-websocket module on github, and a websocket tcp proxy based on
that module.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://serverfault.com/questions/290121/configuring-apache2-to-proxy-websocket&lt;/li&gt;
&lt;li&gt;https://github.com/disconnect/apache-websocket&lt;/li&gt;
&lt;li&gt;http://blog.alex.org.uk/2012/02/16/using-apache-websocket-to-proxy-tcp-connection/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to get this work, I'll need to download and compile some code.
The apxs command requires the apache-prefork-dev package in
Debian/Ubuntu. Install it with "sudo apt-get install
apache-prefork-dev".&lt;/p&gt;
&lt;p&gt;Now we are ready to download the code and install the module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/disconnect/apache-websocket.git&lt;/span&gt;
&lt;span class="n"&gt;Cloning&lt;/span&gt; &lt;span class="n"&gt;into&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.....&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//blog.alex.org.uk/wp-uploads/mod_websocket_tcp_proxy.tar.gz&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apxs2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="n"&gt;mod_websocket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;snip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apxs2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="n"&gt;mod_websocket_draft76&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;snip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;examples&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xzvf&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mod_websocket_tcp_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gzmod_websocket_tcp_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;examples&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="n"&gt;apache&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;examples&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apxs2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="n"&gt;mod_websocket_tcp_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;snip&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;chmod&lt;/span&gt; &lt;span class="mi"&gt;644&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mod_websocket_tcp_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;preparing&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;websocket_tcp_proxy&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mods&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;websocket_tcp_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;Enabling&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;websocket_tcp_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt; &lt;span class="n"&gt;apache2&lt;/span&gt; &lt;span class="n"&gt;restart&lt;/span&gt;
&lt;span class="n"&gt;johnh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="o"&gt;:~&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Before we restart, I want to remove my Proxy lines and replace them with
the mod_websocket_tcp_proxy lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;SetHandler&lt;/span&gt; &lt;span class="n"&gt;websocket&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;handler&lt;/span&gt;        
&lt;span class="n"&gt;WebSocketHandler&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;apache2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mod_websocket_tcp_proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;so&lt;/span&gt; &lt;span class="n"&gt;tcp_proxy_init&lt;/span&gt;        
&lt;span class="n"&gt;WebSocketTcpProxyBase64&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;        
&lt;span class="n"&gt;WebSocketTcpProxyHost&lt;/span&gt; &lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;        
&lt;span class="n"&gt;WebSocketTcpProxyPort&lt;/span&gt; &lt;span class="mi"&gt;2443&lt;/span&gt;        
&lt;span class="n"&gt;WebSocketTcpProxyProtocol&lt;/span&gt; &lt;span class="n"&gt;base64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Despite all this, I was still unable to get this to work. I even
attempted using the web root (/) as my location. If the Location matches
and your HTTP request is handled by mod_websocket, you get a 404. If
you use Proxy, then your websocket request is handled by mod_proxy.
Mod_proxy wins out over Location matches. Perhaps you can modify
gateone code to have one URL for the web interface and one for
websockets (or maybe it's already in place and we just need to know),
but I don't see a way at this time to get this working under Apache. I
may be able to work with the gateone author and the
mod_websocket_tcp_proxy.c author to come up with a solution. Or I
could try installing nginx. In the meantime, I can continue to run Open
Gate as a non-root user on a non-standard port. Alternatively, I could
find a wrapper to bring port 443 to 2443.&lt;/p&gt;</summary></entry><entry><title>Puppet Dashboard and selinux</title><link href="http://www.yourtech.us//2012/06/puppet-dashboard-and-selinux.html" rel="alternate"></link><updated>2012-06-25T00:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-06-25:/2012/06/puppet-dashboard-and-selinux.html</id><summary type="html">&lt;p&gt;Once I got a rough handle on setting up Puppet, I decided to get &lt;a href="http://projects.puppetlabs.com/projects/dashboard" title="Puppet Dashboard"&gt;Puppet
Dashboard&lt;/a&gt; working on my puppetmaster (a Centos 6 server) to have a
sort of web interface to view puppet statuses. Since I already have the
puppetlabs repositories setup from when I installed puppet, this was
almost as simple as running "yum install puppet-dashboard".&lt;/p&gt;
&lt;p&gt;You then go to /usr/share/puppet-dashboard and follow the &lt;a href="http://docs.puppetlabs.com/dashboard/manual/1.2/bootstrapping.html" title="Puppet Install Guide"&gt;install
guide&lt;/a&gt; to get the database working. Then you can run it locally using
the "sudo -u puppet-dashboard ./script/server -e production" command or
starting the service (service puppet-dashboard start). I recommed
running it manually the first few times to make sure everything is
working.&lt;/p&gt;
&lt;p&gt;At this point, I was able to browse to http://puppetmaster:3000/ and
view a nice looking dashboard with no hosts checked in. I then made sure
to add the following to puppetmaster's puppet.conf [master] section and
restart puppet.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;reports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;
&lt;span class="n"&gt;reporturl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:3000/reports/upload&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I performed a "puppet agent --test" on one of my puppets, and here is
where I ran into trouble. Everything appeared to work, but no report or
"pending task" showed up in the Dashboard. I ran the Dashboard locally
so I could see the http request coming in. No request. I double checked
my configuration, everything looked good.&lt;/p&gt;
&lt;p&gt;Finally, I ran my puppetmaster in debug/no-daemonize mode.
(/usr/sbin/puppetmaster --debug --no-daemonize) so I could watch what
was happening. However, in this mode, it worked fine. I ran
/usr/sbin/puppetmaster without debugging and it still worked. The
reports would get submitted to dashboard if I ran puppetmaster directly,
but not if I started it with the init scripts.&lt;/p&gt;
&lt;p&gt;I couldn't find any differences between how the init script was starting
puppetmaster vs me starting it manually. However, I did come across this
entry in /var/log/messages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="n"&gt;puppetmasterj&lt;/span&gt; &lt;span class="n"&gt;puppet&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11988&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Compiled&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;puppet2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lab&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;environment&lt;/span&gt; &lt;span class="n"&gt;production&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;1.16&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;
 &lt;span class="n"&gt;Jul&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="n"&gt;puppetmasterj&lt;/span&gt; &lt;span class="n"&gt;puppet&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;11988&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Report&lt;/span&gt; &lt;span class="n"&gt;processor&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Permission&lt;/span&gt; &lt;span class="n"&gt;denied&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which led me to the following entry in audit.log&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AVC&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1343225819.078&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1582&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;avc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;denied&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;11988&lt;/span&gt; &lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;puppetmasterd&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt; &lt;span class="n"&gt;scontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;unconfined_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;system_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;puppetmaster_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tcontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;system_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;object_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;ntop_port_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tcp_socket&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This was an selinux issue. I quickly ascertained that turning enforcing
off in selinux allowed my reports to get through. I couldn't find anyone
else online encountering this issue. However, many people disable
selinux enforcing early on and I guess the cross-section of
puppet-dashboard users and those using selinux enforcing is somewhat
small.&lt;/p&gt;
&lt;p&gt;How to fix this? There is a set of python programs called "audit2why"
and "audit2allow" as part of the policycoreutils-python package. These
tools will parse entries from the audit.log and either explain why an
action was denied or provide a solution. You can get these tools by
doing a "yum install policycoreutils-python".&lt;/p&gt;
&lt;p&gt;Now we can use audit2allow to parse our audit.log error. You'll want to
run the tool, paste in your log entry, and then hit Ctrl+D on a blank
line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppetmasterj&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;audit2allow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;puppetmaster&lt;/span&gt;
 &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AVC&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1343232143.497&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1617&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;avc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;denied&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12552&lt;/span&gt; &lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;puppetmasterd&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt; &lt;span class="n"&gt;scontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;unconfined_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;system_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;puppetmaster_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tcontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;system_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;object_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;ntop_port_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tcp_socket&lt;/span&gt;
 &lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;puppetmaster&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;puppetmaster_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="kt"&gt;ntop_port_t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;tcp_socket&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;=============&lt;/span&gt; &lt;span class="kt"&gt;puppetmaster_t&lt;/span&gt; &lt;span class="o"&gt;==============&lt;/span&gt;
 &lt;span class="n"&gt;allow&lt;/span&gt; &lt;span class="kt"&gt;puppetmaster_t&lt;/span&gt; &lt;span class="kt"&gt;ntop_port_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tcp_socket&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above gives you a textual view of a module you can create to allow
puppetmaster to make an outbound connection. audit2allow will even
generate that module with the -M option.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppetmasterj&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;audit2allow&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;puppetmaster&lt;/span&gt;
 &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;AVC&lt;/span&gt; &lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;audit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1343232143.497&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1617&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;avc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;denied&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name_connect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;  &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;12552&lt;/span&gt; &lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;puppetmasterd&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt; &lt;span class="n"&gt;scontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;unconfined_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;system_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;puppetmaster_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tcontext&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;system_u&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;object_r&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;ntop_port_t&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;s0&lt;/span&gt; &lt;span class="n"&gt;tclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tcp_socket&lt;/span&gt;
 &lt;span class="o"&gt;********************&lt;/span&gt; &lt;span class="n"&gt;IMPORTANT&lt;/span&gt; &lt;span class="o"&gt;***********************&lt;/span&gt;
 &lt;span class="n"&gt;To&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;policy&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
 &lt;span class="n"&gt;semodule&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;puppetmaster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That generated the module "puppetmaster.pp". Despite the pp extension,
this is not a puppet manifest, but an selinux binary module. Let's
install it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;puppetmasterj&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;semodule&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;puppetmaster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With that, puppetmaster can communicate with dashboard and reports are
flowing. The only remaining thing left to do is to file a bug report. As
it happened, someone had posted a bug report similar to this for
documentation on the puppetdb project. I decided to append to that
issue, but I suggested migrating the issue to the main puppet project.
Issue &lt;a href="http://projects.puppetlabs.com/issues/15567" title="Issue 15567 selinux"&gt;#15567&lt;/a&gt;.&lt;/p&gt;</summary><category term="puppet selinux"></category></entry><entry><title>Using puppet to install djbdns</title><link href="http://www.yourtech.us//2012/06/using-puppet-to-install-djbdns.html" rel="alternate"></link><updated>2012-06-22T12:30:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2012-06-22:/2012/06/using-puppet-to-install-djbdns.html</id><summary type="html">&lt;p&gt;This is a basic walkthrough of getting a slightly complex "step by step
to install" program like djbdns to install under puppet (in this case,
under Ubuntu 12.04). It shows building the manifest, testing it, and
some possible gotchas.  &lt;/p&gt;
&lt;p&gt;I am generally following the guide put together by Higher Logic[1], with
a few changes of my own.  &lt;/p&gt;
&lt;p&gt;Step 1: Installation&lt;br /&gt;
I use the dbndns fork of djbdns, which has a few patches installed that
djbdns lacks. In fact, the djbdns package in Debian/Ubuntu is a virtual
package that really install dbndns. To install it normally, you would
type "sudo apt-get install dbndns". This would also install daemontools
and daemontools-run. However, we'll also need make and ucspi-tcp.  &lt;/p&gt;
&lt;p&gt;We're going to do this the puppet way. I'm assuming my puppet
configuration in in /etc/puppet, node manifests are in
/etc/puppet/nodes, and modules are in /etc/puppet/modules.  &lt;/p&gt;
&lt;p&gt;a. Create the dbndns module with a package definition to install   &lt;/p&gt;
&lt;p&gt;sudo mkdir -p /etc/puppet/modules/dbndns/manifests&lt;br /&gt;
    sudo vi /etc/puppet/modules/dbndns/manifests/init.pp&lt;br /&gt;
&lt;br /&gt;
        class dbndns {&lt;br /&gt;
            package {&lt;br /&gt;
                    dbndns:&lt;br /&gt;
                    ensure =&gt; present;  &lt;/p&gt;
&lt;p&gt;ucspi-tcp:&lt;br /&gt;
                    ensure =&gt; present;  &lt;/p&gt;
&lt;p&gt;make:&lt;br /&gt;
                    ensure =&gt; present;&lt;br /&gt;
            }  &lt;/p&gt;
&lt;p&gt;}  &lt;/p&gt;
&lt;p&gt;b. Create a file for your node (ie: puppet2.example.net)  &lt;/p&gt;
&lt;p&gt;sudo vi /etc/puppet/nodes/puppet2.example.net.pp&lt;br /&gt;
&lt;br /&gt;
        node    'puppet2.lab.example.net' {&lt;br /&gt;
            include dbndns&lt;br /&gt;
        }&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;c. Test&lt;br /&gt;
Ok, to test on your puppet client, run "sudo puppet agent --test"  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~# sudo puppet agent --test&lt;br /&gt;
    info: Retrieving plugin&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/facter_dot_d.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/root_home.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/puppet_vardir.rb&lt;br /&gt;
    info: Caching catalog for puppet2.lab.example.net&lt;br /&gt;
    info: Applying configuration version '1340213237'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Package[dbndns]/ensure: created&lt;br /&gt;
    notice: Finished catalog run in 3.39 seconds  &lt;/p&gt;
&lt;p&gt;Here we can see our dbndns package installed. But is it running? Well,
djbdns uses daemontools, which runs svscan, and some searching online
shows that in Ubuntu 12.04/Precise, this is now an upstart job. svscan
is not running. So let's make it run. Add the following to your init.pp
(within the module definition):  &lt;/p&gt;
&lt;p&gt;# define the service to restart&lt;br /&gt;
        service { "svscan":&lt;br /&gt;
                ensure  =&gt; "running",&lt;br /&gt;
                provider =&gt; "upstart",&lt;br /&gt;
                require =&gt; Package["dbndns"],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;Now back on puppet2, let's test it.  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~# sudo puppet agent --test&lt;br /&gt;
    info: Retrieving plugin&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/facter_dot_d.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/root_home.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/puppet_vardir.rb&lt;br /&gt;
    info: Caching catalog for puppet2.lab.example.net&lt;br /&gt;
    info: Applying configuration version '1340213237'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Service[svscan]/ensure: ensure changed
'stopped' to 'running'&lt;br /&gt;
    notice: Finished catalog run in 0.47 seconds  &lt;/p&gt;
&lt;p&gt;We now told puppet to ensure that svscan is running. The "provider"
option tells it to use upstart instead of /etc/init.d/ scripts or the
service command. Also, we make sure that it doesn't attempt to start
svscan unless dbndns is already installed.  &lt;/p&gt;
&lt;p&gt;Now we have daemontools running, but we haven't got it start our tinydns
service yet. To do that, we need to create some users and configure the
service.&lt;br /&gt;
&lt;br /&gt;
Step 2: Create users  &lt;/p&gt;
&lt;p&gt;Going back to our guide, our next step is to create users. We can do
that in puppet as well.&lt;br /&gt;
    # Users for the chroot jail&lt;br /&gt;
    adduser --no-create-home --disabled-login --shell /bin/false dnslog&lt;br /&gt;
    adduser --no-create-home --disabled-login --shell /bin/false
tinydns&lt;br /&gt;
    adduser --no-create-home --disabled-login --shell /bin/false
dnscache  &lt;/p&gt;
&lt;p&gt;So in our init.pp module file, we need to define our users:  &lt;/p&gt;
&lt;p&gt;user { "dnslog":&lt;br /&gt;
            shell =&gt; "/bin/false",&lt;br /&gt;
            managehome =&gt; "no",&lt;br /&gt;
            ensure =&gt; "present",&lt;br /&gt;
        }&lt;br /&gt;
&lt;br /&gt;
    user { "tinydns":&lt;br /&gt;
            shell =&gt; "/bin/false",&lt;br /&gt;
            managehome =&gt; "no",&lt;br /&gt;
            ensure =&gt; "present",&lt;br /&gt;
        }&lt;br /&gt;
&lt;br /&gt;
    user { "dnscache":&lt;br /&gt;
            shell =&gt; "/bin/false",&lt;br /&gt;
            managehome =&gt; "no",&lt;br /&gt;
            ensure =&gt; "present",&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;Back on puppet2, we can give that a test.  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~\$ sudo puppet agent --test&lt;br /&gt;
    info: Retrieving plugin&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/facter_dot_d.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/root_home.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/puppet_vardir.rb&lt;br /&gt;
    info: Caching catalog for puppet2.lab.example.net&lt;br /&gt;
    info: Applying configuration version '1340215757'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnscache]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[tinydns]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnslog]/ensure: created&lt;br /&gt;
    notice: Finished catalog run in 0.86 seconds&lt;br /&gt;
    johnh@puppet2:\~\$ cat /etc/passwd | grep dns&lt;br /&gt;
    dnscache:x:1001:1001::/home/dnscache:/bin/false&lt;br /&gt;
    tinydns:x:1002:1002::/home/tinydns:/bin/false&lt;br /&gt;
    dnslog:x:1003:1003::/home/dnslog:/bin/false  &lt;/p&gt;
&lt;p&gt;So far, so good. Now we have to do the configuration, which will require
executing some commands.  &lt;/p&gt;
&lt;p&gt;Step 3 - Configuration&lt;br /&gt;
Our next step are the following commands:  &lt;/p&gt;
&lt;p&gt;# Config&lt;br /&gt;
    tinydns-conf tinydns dnslog /etc/tinydns/ 1.2.3.4&lt;br /&gt;
    dnscache-conf dnscache dnslog /etc/dnscache 127.0.0.1&lt;br /&gt;
    cd /etc/dnscache; touch /etc/dnscache/root/ip/127.0.0&lt;br /&gt;
    mkdir /etc/service ; cd /etc/service ; ln -sf /etc/tinydns/ ; ln -sf
/etc/dnscache&lt;br /&gt;
&lt;br /&gt;
The first two commands create our service directories. Authoratative
tinydns is set to listen on 1.2.3.4 and dnscache is set to listen on
127.0.0.1. The 3rd command creates a file that restricts dnscache to
only respond to requests from IPs starting with 127.0.0. This is isn't
necessary, but the challenge is interesting.  &lt;/p&gt;
&lt;p&gt;What we want to do first is see if /etc/tinydns and /etc/dnscache exist
and if not, run the -conf program. We also need to know the IP address.
Fortunately, puppet provides this as a variable "\$ipaddress". Try
running the "facter" command.  &lt;/p&gt;
&lt;p&gt;Puppet has a property call creates that is ideal. If the directory
specified by creates does not exist, it will perform the associated
commands. Here are our new lines:  &lt;/p&gt;
&lt;p&gt;exec { "configure-tinydns":&lt;br /&gt;
            command =&gt; "/usr/bin/tinydns-conf tinydns dnslog
/etc/tinydns \$ipaddress",&lt;br /&gt;
            creates =&gt; "/etc/tinydns",&lt;br /&gt;
            require =&gt; Package['dbndns'],&lt;br /&gt;
    }  &lt;/p&gt;
&lt;p&gt;exec { "configure-dnscache":&lt;br /&gt;
            command =&gt; "/usr/bin/dnscache-conf dnscache dnslog
/etc/dnscache 127.0.0.1",&lt;br /&gt;
            creates =&gt; "/etc/dnscache",&lt;br /&gt;
            require =&gt; Package['dbndns'],&lt;br /&gt;
    }  &lt;/p&gt;
&lt;p&gt;Thos will configure tinydns and dnscache, and then we can restrict
dnscache  &lt;/p&gt;
&lt;p&gt;file { "/etc/dnscache/root/ip/127.0.0":&lt;br /&gt;
            ensure =&gt; "present",&lt;br /&gt;
            owner =&gt; "dnscache",&lt;br /&gt;
            require =&gt; Exec["configure-dnscache"],&lt;br /&gt;
    }  &lt;/p&gt;
&lt;p&gt;Then, we need to create the /etc/service directory and bring tinydns and
dnscache under svscan's control.&lt;br /&gt;
&lt;br /&gt;
    file { "/etc/service":&lt;br /&gt;
            ensure =&gt; "directory",&lt;br /&gt;
            require =&gt; Package["dbndns"],&lt;br /&gt;
    }  &lt;/p&gt;
&lt;p&gt;file { "/etc/service/tinydns":&lt;br /&gt;
            ensure =&gt; "link",&lt;br /&gt;
            target =&gt; "/etc/tinydns",&lt;br /&gt;
            require =&gt; [ File['/etc/service'],
Exec["configure-tinydns"], ],&lt;br /&gt;
    }  &lt;/p&gt;
&lt;p&gt;file { "/etc/service/dnscache":&lt;br /&gt;
            ensure =&gt; "link",&lt;br /&gt;
            target =&gt; "/etc/dnscache",&lt;br /&gt;
            require =&gt; [  File['/etc/service'],
Exec["configure-dnscache"]  ],&lt;br /&gt;
    }  &lt;/p&gt;
&lt;p&gt;And our tests:  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~\$ sudo puppet agent --test&lt;br /&gt;
    info: Retrieving plugin&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/facter_dot_d.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/root_home.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/puppet_vardir.rb&lt;br /&gt;
    info: Caching catalog for puppet2.lab.example.net&lt;br /&gt;
    info: Applying configuration version '1340218775'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Exec[configure-dnscache]/returns:
executed successfull&lt;br /&gt;
    notice:
/Stage[main]/Dbndns/File[/etc/dnscache/root/ip/127.0.0]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/dnscache]/ensure:
created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Exec[configure-tinydns]/returns:
executed successfully&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/tinydns]/ensure:
created&lt;br /&gt;
    notice: Finished catalog run in 0.59 seconds&lt;br /&gt;
    johnh@puppet2:\~\$ ls /etc/service/tinydns/root/&lt;br /&gt;
    add-alias  add-alias6  add-childns  add-host  add-host6  add-mx 
add-ns  data  Makefile&lt;br /&gt;
    johnh@puppet2:\~\$ ps ax | grep supervise&lt;br /&gt;
     7932 ?        S      0:00 supervise dnscache&lt;br /&gt;
     7933 ?        S      0:00 supervise log&lt;br /&gt;
     7934 ?        S      0:00 supervise tinydns&lt;br /&gt;
     7935 ?        S      0:00 supervise log  &lt;/p&gt;
&lt;p&gt;Doing a dig www.example.net @localhost returns 192.0.43.10, so dnscache
works.  &lt;/p&gt;
&lt;p&gt;Now, let's check tinydns. No domains are configured yet, so let's put
example.com in there. Edit /etc/tinydns/root/data and put these lines in
it, substituting 10.100.0.178 for your own "public" IP address.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;amp;example.com::ns0.example.com.:3600 
Zexample.com:ns0.example.com.:hostmaster.example.com.:1188079131:16384:2048:1048576:2560:2560&lt;br /&gt;
 +ns0.example.com:10.100.0.178:3600&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Then "make" the data.cdb file:  &lt;/p&gt;
&lt;p&gt;cd /etc/tinydns/root ; sudo make&lt;br /&gt;
&lt;br /&gt;
Now test:  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:/etc/tinydns/root\$ dig ns0.example.com @10.100.0.178  &lt;/p&gt;
&lt;p&gt;; \&amp;lt;\&amp;lt;&gt;&gt; DiG 9.8.1-P1 \&amp;lt;\&amp;lt;&gt;&gt; ns0.example.com @10.100.0.178&lt;br /&gt;
    ;; global options: +cmd&lt;br /&gt;
    ;; Got answer:&lt;br /&gt;
    ;; -&gt;&gt;HEADER\&amp;lt;\&amp;lt;- opcode: QUERY, status: NOERROR, id: 25433&lt;br /&gt;
    ;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 1, ADDITIONAL:
0&lt;br /&gt;
    ;; WARNING: recursion requested but not available  &lt;/p&gt;
&lt;p&gt;;; QUESTION SECTION:&lt;br /&gt;
    ;ns0.example.com.               IN      A  &lt;/p&gt;
&lt;p&gt;;; ANSWER SECTION:&lt;br /&gt;
    ns0.example.com.        3600    IN      A       10.100.0.178  &lt;/p&gt;
&lt;p&gt;;; AUTHORITY SECTION:&lt;br /&gt;
    example.com.            3600    IN      NS      ns0.example.com.  &lt;/p&gt;
&lt;p&gt;Ok, for a final test, let's remove everything and run it again.  &lt;/p&gt;
&lt;p&gt;sudo service svscan stop&lt;br /&gt;
    sudo apt-get purge daemontools daemontools-run ucspi-tcp dbndns&lt;br /&gt;
    sudo rm -rf /etc/service /etc/tinydns /etc/dnscache&lt;br /&gt;
    sudo userdel tinydns &lt;br /&gt;
    sudo userdel dnslog &lt;br /&gt;
    sudo userdel dnscache&lt;br /&gt;
&lt;br /&gt;
Let's do this:  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~\$ sudo puppet agent --test&lt;br /&gt;
    info: Retrieving plugin&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/facter_dot_d.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/root_home.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/puppet_vardir.rb&lt;br /&gt;
    info: Caching catalog for puppet2.lab.example.net&lt;br /&gt;
    info: Applying configuration version '1340220032'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Service[svscan]/ensure: ensure changed
'stopped' to 'running'&lt;br /&gt;
    err: /Stage[main]/Dbndns/Exec[configure-dnscache]/returns: change
from notrun to 0 failed: /usr/bin/dnscache-conf dnscache dnslog
/etc/dnscache 127.0.0.1 returned 111 instead of one of [0] at
/etc/puppet/modules/dbndns/manifests/init.pp:47&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnscache]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[tinydns]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/dnscache]: Dependency
Exec[configure-dnscache] has failures: true&lt;br /&gt;
    warning: /Stage[main]/Dbndns/File[/etc/service/dnscache]: Skipping
because of failed dependencies&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnslog]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/dnscache/root/ip/127.0.0]:
Dependency Exec[configure-dnscache] has failures: true&lt;br /&gt;
    warning: /Stage[main]/Dbndns/File[/etc/dnscache/root/ip/127.0.0]:
Skipping because of failed dependencies&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Exec[configure-tinydns]/returns:
executed successfully&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/tinydns]/ensure:
created&lt;br /&gt;
    notice: Finished catalog run in 0.98 seconds  &lt;/p&gt;
&lt;p&gt;Looks like we had something fail. Oops! configure-dnscache failed. We
see that the user dnscache and tinydns were created after. So we need to
make sure that the users are created before we can configure the
service. This needs to happen to tinydns as well as dnscache. Good thing
we did this test so it doesn't bite us in the future. Let's adjust our
init.pp  &lt;/p&gt;
&lt;p&gt;exec { "configure-tinydns":&lt;br /&gt;
                command =&gt; "/usr/bin/tinydns-conf tinydns dnslog
/etc/tinydns \$ipaddress",&lt;br /&gt;
                creates =&gt; "/etc/tinydns",&lt;br /&gt;
                require =&gt; [ Package['dbndns'], User['dnscache'],
User['dnslog'] ],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;exec { "configure-dnscache":&lt;br /&gt;
                command =&gt; "/usr/bin/dnscache-conf dnscache dnslog
/etc/dnscache 127.0.0.1",&lt;br /&gt;
                creates =&gt; "/etc/dnscache",&lt;br /&gt;
                require =&gt; [ Package['dbndns'],  User['dnscache'],
User['dnslog'] ],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;Also, let's go ahead and run our commands above to get rid of everything
again.  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~\$ sudo puppet agent --test&lt;br /&gt;
    info: Retrieving plugin&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/facter_dot_d.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/root_home.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/puppet_vardir.rb&lt;br /&gt;
    info: Caching catalog for puppet2.lab.example.net&lt;br /&gt;
    info: Applying configuration version '1340220641'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Service[svscan]/ensure: ensure changed
'stopped' to 'running'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnscache]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[tinydns]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnslog]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Exec[configure-dnscache]/returns:
executed successfully&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/dnscache]/ensure:
created&lt;br /&gt;
    notice:
/Stage[main]/Dbndns/File[/etc/dnscache/root/ip/127.0.0]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Exec[configure-tinydns]/returns:
executed successfully&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/tinydns]/ensure:
created&lt;br /&gt;
    notice: Finished catalog run in 1.05 seconds  &lt;/p&gt;
&lt;p&gt;Everything looks good, but when we run "ps ax | grep svscan" we don't
see svscan running. So we check /var/log/syslog and see this   &lt;/p&gt;
&lt;p&gt;Jun 20 19:31:35 puppet2 kernel: [ 9646.348251] init: svscan main
process ended, respawning&lt;br /&gt;
    Jun 20 19:31:35 puppet2 kernel: [ 9646.359074] init: svscan
respawning too fast, stopped&lt;br /&gt;
&lt;br /&gt;
If we start it by hand, it works, so what happened? /etc/service didn't
exist yet.  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~\$ sudo service svscan start&lt;br /&gt;
    svscan start/running, process 9726&lt;br /&gt;
    johnh@puppet2:\~\$ ps ax | grep supervise&lt;br /&gt;
     9730 ?        S      0:00 supervise dnscache&lt;br /&gt;
     9731 ?        S      0:00 supervise log&lt;br /&gt;
     9732 ?        S      0:00 supervise tinydns&lt;br /&gt;
     9733 ?        S      0:00 supervise log  &lt;/p&gt;
&lt;p&gt;Let's fix that.  &lt;/p&gt;
&lt;p&gt;# define the service to restart&lt;br /&gt;
        service { "svscan":&lt;br /&gt;
                ensure  =&gt; "running",&lt;br /&gt;
                provider =&gt; "upstart",&lt;br /&gt;
                require =&gt; [ Package["dbndns"], File["/etc/service"] ]&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;Now, let's give it a go:  &lt;/p&gt;
&lt;p&gt;johnh@puppet2:\~\$ sudo puppet agent --test&lt;br /&gt;
    info: Retrieving plugin&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/facter_dot_d.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/root_home.rb&lt;br /&gt;
    info: Loading facts in /var/lib/puppet/lib/facter/puppet_vardir.rb&lt;br /&gt;
    info: Caching catalog for puppet2.lab.example.net&lt;br /&gt;
    info: Applying configuration version '1340220885'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnscache]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[tinydns]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Service[svscan]/ensure: ensure changed
'stopped' to 'running'&lt;br /&gt;
    notice: /Stage[main]/Dbndns/User[dnslog]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Exec[configure-dnscache]/returns:
executed successfully&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/dnscache]/ensure:
created&lt;br /&gt;
    notice:
/Stage[main]/Dbndns/File[/etc/dnscache/root/ip/127.0.0]/ensure: created&lt;br /&gt;
    notice: /Stage[main]/Dbndns/Exec[configure-tinydns]/returns:
executed successfully&lt;br /&gt;
    notice: /Stage[main]/Dbndns/File[/etc/service/tinydns]/ensure:
created&lt;br /&gt;
    notice: Finished catalog run in 1.24 seconds&lt;br /&gt;
    johnh@puppet2:\~\$ ps ax | grep svscan&lt;br /&gt;
    10613 ?        Ss     0:00 /bin/sh /usr/bin/svscanboot&lt;br /&gt;
    10615 ?        S      0:00 svscan /etc/service&lt;br /&gt;
    10639 pts/0    S+     0:00 grep --color=auto svscan&lt;br /&gt;
    johnh@puppet2:\~\$ ps ax | grep supervise&lt;br /&gt;
    10630 ?        S      0:00 supervise dnscache&lt;br /&gt;
    10631 ?        S      0:00 supervise log&lt;br /&gt;
    10632 ?        S      0:00 supervise tinydns&lt;br /&gt;
    10633 ?        S      0:00 supervise log&lt;br /&gt;
    10641 pts/0    S+     0:00 grep --color=auto supervise  &lt;/p&gt;
&lt;p&gt;Excellent! We now have a working puppet class that will install puppet,
configure it, and get it up and running. At this point, we don't have
any records being served by tinydns, but it wouldn't be hard to push a
file to /etc/tinydns/root/data and execute a command to perform the
make. In my case, I will be using VegaDNS's update-data.sh[2] to pull
the data remotely.  &lt;/p&gt;
&lt;p&gt;Here is our completed modules/dbndns/init.pp:  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;class dbndns {  &lt;/p&gt;
&lt;p&gt;package {&lt;br /&gt;
                dbndns:&lt;br /&gt;
                ensure =&gt; present;  &lt;/p&gt;
&lt;p&gt;ucspi-tcp:&lt;br /&gt;
                ensure =&gt; present;  &lt;/p&gt;
&lt;p&gt;make:&lt;br /&gt;
                ensure =&gt; present;&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;# define the service to restart&lt;br /&gt;
        service { "svscan":&lt;br /&gt;
                ensure  =&gt; "running",&lt;br /&gt;
                provider =&gt; "upstart",&lt;br /&gt;
                require =&gt; [ Package["dbndns"], File["/etc/service"] ]&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;user { "dnslog":&lt;br /&gt;
                        shell =&gt; "/bin/false",&lt;br /&gt;
                        managehome =&gt; false,&lt;br /&gt;
                        ensure =&gt; "present",&lt;br /&gt;
                }  &lt;/p&gt;
&lt;p&gt;user { "tinydns":&lt;br /&gt;
                        shell =&gt; "/bin/false",&lt;br /&gt;
                        managehome =&gt; false,&lt;br /&gt;
                        ensure =&gt; "present",&lt;br /&gt;
                }  &lt;/p&gt;
&lt;p&gt;user { "dnscache":&lt;br /&gt;
                        shell =&gt; "/bin/false",&lt;br /&gt;
                        managehome =&gt; false,&lt;br /&gt;
                        ensure =&gt; "present",&lt;br /&gt;
                }  &lt;/p&gt;
&lt;p&gt;exec { "configure-tinydns":&lt;br /&gt;
                command =&gt; "/usr/bin/tinydns-conf tinydns dnslog
/etc/tinydns \$ipaddress",&lt;br /&gt;
                creates =&gt; "/etc/tinydns",&lt;br /&gt;
                require =&gt; [ Package['dbndns'], User['dnscache'],
User['dnslog'] ],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;exec { "configure-dnscache":&lt;br /&gt;
                command =&gt; "/usr/bin/dnscache-conf dnscache dnslog
/etc/dnscache 127.0.0.1",&lt;br /&gt;
                creates =&gt; "/etc/dnscache",&lt;br /&gt;
                require =&gt; [ Package['dbndns'],  User['dnscache'],
User['dnslog'] ],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;file { "/etc/dnscache/root/ip/127.0.0":&lt;br /&gt;
                ensure =&gt; "present",&lt;br /&gt;
                owner =&gt; "dnscache",&lt;br /&gt;
                require =&gt; Exec["configure-dnscache"],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;file { "/etc/service":&lt;br /&gt;
                ensure =&gt; "directory",&lt;br /&gt;
                require =&gt; Package["dbndns"],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;file { "/etc/service/tinydns":&lt;br /&gt;
                ensure =&gt; "link",&lt;br /&gt;
                target =&gt; "/etc/tinydns",&lt;br /&gt;
                require =&gt; [ File['/etc/service'],&lt;br /&gt;
                                        Exec["configure-tinydns"],&lt;br /&gt;
                                ],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;file { "/etc/service/dnscache":&lt;br /&gt;
                ensure =&gt; "link",&lt;br /&gt;
                target =&gt; "/etc/dnscache",&lt;br /&gt;
                require =&gt; [  File['/etc/service'],&lt;br /&gt;
                                        Exec["configure-dnscache"]&lt;br /&gt;
                                ],&lt;br /&gt;
        }  &lt;/p&gt;
&lt;p&gt;}  &lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;[1]
http://higherlogic.com.au/2011/djbdns-on-ubuntu-10-04-server-migration-from-bind-and-zone-transfers-to-secondaries-bind/&lt;br /&gt;
[2] https://github.com/shupp/VegaDNS/blob/master/update-data.sh&lt;/p&gt;</summary></entry><entry><title>Sending messages using xmpppy</title><link href="http://www.yourtech.us//2011/04/sending-messages-using-xmpppy.html" rel="alternate"></link><updated>2011-04-05T00:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2011-04-05:/2011/04/sending-messages-using-xmpppy.html</id><summary type="html">&lt;p&gt;In continuing working with XMPP and Python, I managed to get xmpppy
working.  &lt;/p&gt;
&lt;p&gt;This proved to be particularly tricky because xmpppy uses some outdated
modules like md5 and sha.  It also relies on some dns functions which no
longer seem to work.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I was able to use the sample script "&lt;a href="http://xmpppy.sourceforge.net/examples/xsend.py"&gt;xsend.py&lt;/a&gt;" that the project
provides.  The big thing is that I had to specify talk.google.com and
the port number directly in the connect command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If I did not specify the servername, I would get the error:&lt;br /&gt;
 An error occurred while looking up _xmpp-client._tcp.example.com  &lt;/p&gt;
&lt;p&gt;NOTE: DNS is configured correctly for the domain I was practicing with,
but the xmpppy code was not able to resolve it.  &lt;/p&gt;
&lt;p&gt;To run the script, simply execute;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;./xblast.py destination@example.com  text to send&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Script:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#!/usr/bin/python&lt;br /&gt;
# \$Id: xsend.py,v 1.8 2006/10/06 12:30:42 normanr Exp \$&lt;br /&gt;
import sys,os,xmpp,time  &lt;/p&gt;
&lt;p&gt;if len(sys.argv) \&amp;lt; 2:&lt;br /&gt;
    print "Syntax: xsend JID text"&lt;br /&gt;
    sys.exit(0)  &lt;/p&gt;
&lt;p&gt;tojid=sys.argv[1]&lt;br /&gt;
text=' '.join(sys.argv[2:])  &lt;/p&gt;
&lt;p&gt;jidparams={}  &lt;/p&gt;
&lt;p&gt;jidparams['jid']='system@example.com'&lt;br /&gt;
jidparams['password'] = '123456'  &lt;/p&gt;
&lt;p&gt;jid=xmpp.protocol.JID(jidparams['jid'])&lt;br /&gt;
cl=xmpp.Client(jid.getDomain(),debug=True)  &lt;/p&gt;
&lt;p&gt;con=cl.connect(('talk.google.com',5222),  use_srv=False)  &lt;/p&gt;
&lt;p&gt;if not con:&lt;br /&gt;
    print 'could not connect!'&lt;br /&gt;
    sys.exit()&lt;br /&gt;
print 'connected with',con&lt;br /&gt;
auth=cl.auth(jid.getNode(),jidparams['password'],resource=jid.getResource())&lt;br /&gt;
if not auth:&lt;br /&gt;
    print 'could not authenticate!'&lt;br /&gt;
    sys.exit()&lt;br /&gt;
print 'authenticated using',auth  &lt;/p&gt;
&lt;p&gt;# cl.SendInitPresence(requestRoster=0)   # you may need to uncomment
this for old server&lt;br /&gt;
id=cl.send(xmpp.protocol.Message(tojid,text))&lt;br /&gt;
print 'sent message with id',id  &lt;/p&gt;
&lt;p&gt;time.sleep(1)   # some older servers will not send the message if you
disconnect immediately after sending  &lt;/p&gt;
&lt;p&gt;cl.disconnect()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;</summary></entry><entry><title>Nagios and XMPP</title><link href="http://www.yourtech.us//2011/02/nagios-and-xmpp.html" rel="alternate"></link><updated>2011-02-28T00:00:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2011-02-28:/2011/02/nagios-and-xmpp.html</id><summary type="html">&lt;p&gt;I found that someone has written a perl script geared towards sending
alerts from Nagios to XMPP usernames.  &lt;/p&gt;
&lt;p&gt;http://www.gridpp.ac.uk/wiki/Nagios_jabber_notification  &lt;/p&gt;
&lt;p&gt;I have downloaded this, but have not yet got it working as of yet, but
it does look promising.  It took me a while to update all the
dependencies for it, but if those were in place, the installation itself
is rather simple.  That is, the notification script works, but I haven't
actually configured nagios as of yet.  &lt;/p&gt;
&lt;p&gt;This script has a shortcoming in that it only accepts the username
portion of the JID and not the domain name -- and this means that
notifications can only be sent between users of the same domain.  &lt;/p&gt;
&lt;p&gt;To illustrate, user@example.net can not send a message to
user@example.com, but user1 and user2 on example.net can send to each
other.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# this command will fail:&lt;br /&gt;
ytjohn@monitor:/usr/local/bin\$ ./notify_by_jabber.pl
yourtech\@example.com testing  &lt;br /&gt;
# while this one works&lt;br /&gt;
ytjohn@monitor:/usr/local/bin\$ ./notify_by_jabber.pl yourtech
testing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And in the perl script, you have to specify the login credentials and
server you're connecting to:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;## Configuration&lt;br /&gt;
# my \$username = 'system@example.com';   # does not work&lt;br /&gt;
my \$username = 'system';&lt;br /&gt;
my \$password = "password";&lt;br /&gt;
my \$resource = "nagios";&lt;br /&gt;
## End of configuration  &lt;/p&gt;
&lt;p&gt;my \$len = scalar @ARGV;&lt;br /&gt;
if (\$len ne 2) {&lt;br /&gt;
   die "Usage...\n \$0 [jabberid] [message]\n";&lt;br /&gt;
}&lt;br /&gt;
my @field=split(/,/,\$ARGV[0]);&lt;br /&gt;
#------------------------------------  &lt;/p&gt;
&lt;p&gt;# Google Talk &amp;amp; Jabber parameters :  &lt;/p&gt;
&lt;p&gt;my \$hostname = 'talk.google.com';&lt;br /&gt;
my \$port = 5222;&lt;br /&gt;
# componentname is the second half of your JID:&lt;br /&gt;
my \$componentname = 'example.com';&lt;br /&gt;
my \$connectiontype = 'tcpip';&lt;br /&gt;
my \$tls = 1;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Originally posted: February 28, 2011 6:23 PM   &lt;/p&gt;</summary></entry><entry><title>Jabbering about Python</title><link href="http://www.yourtech.us//2011/02/jabbering-about-python.html" rel="alternate"></link><updated>2011-02-27T11:11:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2011-02-27:/2011/02/jabbering-about-python.html</id><summary type="html">&lt;p&gt;I am getting more and more into the idea of using XMPP for sending
messages.  XMPP (also known as jabber) is a very open protocol.  Anyone
can throw up a server, and by publishing a few DNS records, your server
can interact with any other XMPP server out there (that is open).  For a
popular example, anyone can throw up their server with their domain and
send messages to someone using Google Chat.&lt;br /&gt;
&lt;br /&gt;
I have a customer that has their domain email hosted by Google apps for
domains, which also means that each person has Google Talk, which is
based off of XMPP.  For a monitoring scenario, I decided I'd rather have
alerts go to an installed Google Talk client instead of to their email. 
This would make alerts more noticeable, but less intrusive to their
Inbox.  Google would also tie all their messages together (chat and
email) for searching later. So my idea was to have monitoring server
send the email alert to a local user, and have it piped through a
program that would send the XMPP alert.  In the future, perhaps an XMPP
bot could also accept commands to control the monitoring system.&lt;br /&gt;
&lt;br /&gt;
I wanted to create a program called "jabblast.py" which would accept
either standard input, or a command line argument, and send a message to
a pre-defined list of recipients.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;echo "sent from stdin" | jabblast.py&lt;br /&gt;
  jabblast.py -m "sent from a command line argument"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Looking at the python and XMPP options out there, I came across three
that looked promising.    &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# xmpppy&lt;br /&gt;
  # sleekxmpp&lt;br /&gt;
  # twisted (the "words" extension)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I was really expecting to find exactly what I wanted to do already
written.  However, it seems anyone writing an XMPP script is creating a
bot that runs continuously and would need modified for a one-time
event.&lt;br /&gt;
&lt;br /&gt;
Sleekxmpp was actually the easiest to understand and work with, however
the project could be in danger of abandonment.   Twisted looks the most
advanced, and I am drawn to it because it seems to offer the most
versatility.  In my mind, I suspect that if I learn twisted for this, I
can just keep using it for all the other stuff I want to do.  However,
it might be "too much" for this simple of an operation.  xmpppy is the
middle ground.  The project seems relatively active and popular.    &lt;/p&gt;
&lt;p&gt;The problem with all three projects is a severe lack of documentation --
for twisted, this lack is primarily on the xmpp side.  One thing very
well hidden is how to specify the server name you want to connect to. 
Ideally, this is provided through a DNS record lookup, but that method
eliminates experimentation with local network ip addresses.   Sleek
never even approaches the concept that you might want your XMPP program
to end.   It has a call for disconnecting, but when I call that, sleek
immediately tries to reconnect.  &lt;/p&gt;
&lt;p&gt;I'm going to go ahead and create my program using all three methods and
decide later which I like best.  &lt;/p&gt;
&lt;p&gt;For these examples, I have hardcoded the login credentials, as well as
the "to" into the source code itself.  In the real world, I should be
pulling that from a configuration file, either XML or YAML (and
potentially from a remote web page).  Secondly, I only list one "to".  I
believe that going from sending a single message to sending multiple
messages should be a matter of a for loop.  Some libraries might even
offer a feature to send to multiple recipients at once.  &lt;/p&gt;
&lt;p&gt;For my first example, I have created a script in sleekxmpp.  I wrote
this by looking at the EchoBot example found &lt;a href="https://github.com/remko/xmpp-tdg/tree/master/code/EchoBot"&gt;here&lt;/a&gt;.  The script will
send a message and then hang for a while after disconnecting before it
finally exits.  I don't know why.  If you enable logging, an error is
thrown after you pass in the disconnect command.  But otherwise, a
relatively simple bit of code, easy to expand upon.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;#!/usr/bin/env python  &lt;/p&gt;
&lt;p&gt;import sys&lt;br /&gt;
import logging&lt;br /&gt;
import sleekxmpp  &lt;/p&gt;
&lt;p&gt;# Uncomment the following line to turn on debugging&lt;br /&gt;
#logging.basicConfig(level=logging.DEBUG, format="%(levelname)-8s
%(message)s")  &lt;/p&gt;
&lt;p&gt;def main() : &lt;br /&gt;
  # configure jabber id credentials and to&lt;br /&gt;
  to = 'recipient@example.net'&lt;br /&gt;
  myjid = 'sender@example.net/blastbot'&lt;br /&gt;
  mysecret = 'password'  &lt;/p&gt;
&lt;p&gt;args = sys.argv[1:]&lt;br /&gt;
  if not args:&lt;br /&gt;
    message = sys.stdin.read()&lt;br /&gt;
  else:&lt;br /&gt;
    message = sys.argv[1]  &lt;/p&gt;
&lt;p&gt;# print to, message&lt;br /&gt;
  # sys.exit()  &lt;/p&gt;
&lt;p&gt;bot = BlastBot(myjid, mysecret, to, message)&lt;br /&gt;
  bot.run()   &lt;/p&gt;
&lt;p&gt;class BlastBot :   &lt;/p&gt;
&lt;p&gt;def __init__(self, jid, password, to, message) : &lt;br /&gt;
    self.message = message&lt;br /&gt;
    self.to = to&lt;br /&gt;
    self.xmpp = sleekxmpp.ClientXMPP(jid, password) &lt;br /&gt;
    self.xmpp.add_event_handler("session_start",
self.handleXMPPConnected)&lt;br /&gt;
    self.xmpp.add_event_handler("disconnected",
self.handleXMPPDisconnected)  &lt;/p&gt;
&lt;p&gt;def run(self) :&lt;br /&gt;
    self.xmpp.connect() &lt;br /&gt;
    self.xmpp.process(threaded=False)   &lt;/p&gt;
&lt;p&gt;def handleXMPPDisconnected(self, event) :&lt;br /&gt;
    sys.exit()  &lt;/p&gt;
&lt;p&gt;def handleXMPPConnected(self, event) :&lt;br /&gt;
    self.xmpp.sendMessage(self.to, self.message)&lt;br /&gt;
    self.xmpp.disconnect(self)  &lt;/p&gt;
&lt;p&gt;if __name__ == "__main__" :&lt;br /&gt;
  main()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;--&lt;br /&gt;
Jabbering about Python By YourTech John on February 27, 2011 11:11 PM&lt;/p&gt;</summary></entry><entry><title>Expanding a raw image file</title><link href="http://www.yourtech.us//2011/01/expanding-a-raw-image-file.html" rel="alternate"></link><updated>2011-01-13T05:57:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2011-01-13:/2011/01/expanding-a-raw-image-file.html</id><summary type="html">&lt;p&gt;On one of my customer's devices, the backup software requires that the
backups go to a separate partition (or drive).  However, the customer
only has one raid array and the bulk of the space is in /home.   To work
around this limitation, I created a raw image file called backup.img,
which gets mounted as /backup.   After the software performs its local
backup, I use duplicity to backup /backup remotely to a backup server at
my location (with encryption).  &lt;/p&gt;
&lt;p&gt;Today I got an alert that /backup was running low on space.  It was an
80GB image and 61GB was in use, leaving only 15GB free.  Now, this
amount of free space should last quite a while.  However, the software
(cPanel)  has a known issue for years that the 80% limit is hardcoded
into the program.  I can change this, but every time cPanel updates, it
overwrites that change.  &lt;/p&gt;
&lt;p&gt;So to be proactive, I decided to go ahead and increase the image size.  &lt;/p&gt;
&lt;p&gt;In order to increase the size of an image, you simply unmount your raw
image and use the dd command.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# Increase by \~20GB&lt;br /&gt;
dd if=/dev/zero bs=1M count=20480 &gt;&gt; backup.img&lt;br /&gt;
# 20,480 is 20,480 MB or \~20GB  &lt;/p&gt;
&lt;p&gt;# check the filesystem&lt;br /&gt;
/sbin/e2fsck -f backup.img&lt;br /&gt;
# resize the filesystem&lt;br /&gt;
/sbin/resize2fs backup.img&lt;br /&gt;
# check the filesystem again&lt;br /&gt;
e2fsck -f backup.img               &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;--  &lt;/p&gt;
&lt;p&gt;Expanding a raw image file By Administrator on January 13, 2011 5:57 AM&lt;/p&gt;</summary></entry><entry><title>Learning Python</title><link href="http://www.yourtech.us//2011/01/learning-python.html" rel="alternate"></link><updated>2011-01-03T00:00:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2011-01-03:/2011/01/learning-python.html</id><summary type="html">&lt;p&gt;I am reasonably familiar with Perl and PHP languages.  Recently though,
I have taken it upon myself to learn Python.  I've played with Python a
few times, and it seems to be very powerful with lots of useful
functionality under the hood.  &lt;/p&gt;
&lt;p&gt;For some basic practice, I recommend &lt;a href="http://learnpythonthehardway.org/"&gt;Learn Python The Hard Way&lt;/a&gt;,
which is free book by a reputable Python author, Zed Shaw.  He makes the
book itself available for free as a PDF download or you can purchase it
directly.  The book walks you through a number of examples, each one
building upon what you learned in the previous exercise.  You are
required to enter each exercise in by hand.  This uses the principle
that if you learn better by writing things down, you'll learn better by
typing it in.  Copying and pasting completely bypasses that manual entry
learning process, so if you want to learn, I suggest you follow Shaw's
instructions.  I found the book rather insightful, but I often felt that
certain aspects were not being properly explained to me.  To be fair,
I'm only up to exercise 15 in a 52 exercise book.  &lt;/p&gt;
&lt;p&gt;However, I also came across another way to learn Python.  Google has had
instructor &lt;a href="http://www-cs-faculty.stanford.edu/%7enick/"&gt;Nick Parlante&lt;/a&gt; teach Python in a classroom setting.  The
class was video taped and &lt;a href="http://code.google.com/edu/languages/google-python-class/index.html"&gt;put online&lt;/a&gt; along with the associated
learning aids (primarily a group of python files).  The class was taught
in 7 segments over 2 days.  So if you go to the &lt;a href="http://code.google.com/edu/languages/google-python-class/index.html"&gt;class website&lt;/a&gt;, you can download the learning aids, and then follow along with
the lecture videos.    &lt;/p&gt;
&lt;p&gt;I like this method better than following the static book.  Since it was
taught in an interactive classroom, it goes at a pace where you can keep
up with it from your own computer.  Also, students in the class were
able to ask questions, which allows the information to be represented in
a different way.  Finally, at the end of each segment, there are some
sample files you can open up in your editor.  Each file has a skeleton
template.  In comments, it tells you what a segment is supposed to do,
and you have to implement it in code based on what you learned while
watching the video.  The sample file also includes some bare bones "unit
tests" that call your functions, passing it input data and comparing it
to an expected output.  These unit tests will show what they received
from your function and what they expected.  If the two matched, you have
succeeded.    &lt;/p&gt;
&lt;p&gt;I like these practice samples mainly because it immediately forces you
to apply the knowledge you learned.  You do have to think about it and
do some back and forth troubleshooting on your own code.  Since they
provided the unit tests, you can get instant feedback on if you're doing
it correctly or not.  &lt;/p&gt;
&lt;p&gt;If you want to learn Python and can dedicate an hour on any given day to
it, I recommend the Google course.  If you want to go in smaller 10-20
minute blocks, try using Learn Python The Hard Way.  Of course, you can
pause the videos and come back to them, but I think it's much better to
go through the entire video, following along on your own system as you
go. &lt;br /&gt;
--&lt;br /&gt;
Learning Python By Administrator on January 3, 2011 4:40 AM&lt;/p&gt;</summary></entry><entry><title>We have moved!</title><link href="http://www.yourtech.us//2010/09/we-have-moved.html" rel="alternate"></link><updated>2010-09-06T00:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2010-09-06:/2010/09/we-have-moved.html</id><summary type="html">&lt;p&gt;Starting around Memorial Day, we have been busy working on moving our
office to our new location in Bedford, PA.  We have now completed that
move and wanted to let everyone know our new address.  &lt;/p&gt;
&lt;p&gt;Our new address for correspondence is:  &lt;/p&gt;
&lt;p&gt;YourTech, LLC&lt;br /&gt;
300 Cumberland Rd&lt;br /&gt;
Bedford, PA 15522 &lt;/p&gt;
&lt;p&gt;--&lt;br /&gt;
We have moved! By YourTech John on September 6, 2010 8:00 AM&lt;/p&gt;</summary></entry><entry><title>Securing Apache2</title><link href="http://www.yourtech.us//2010/01/securing-apache2.html" rel="alternate"></link><updated>2010-01-02T00:00:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2010-01-02:/2010/01/securing-apache2.html</id><summary type="html">&lt;p&gt;A client wanted to make files available available to the web browser
from within their LAN and a handful of static IPs without requiring any
sort of username or password.  This is the web equivalent of a shared,
read only folder.  This is no big issue, you can create an .htaccess
file like so:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Order deny,allow&lt;br /&gt;
Deny from all&lt;br /&gt;
Allow from 10.10.0.1/16&lt;br /&gt;
Allow from 127.0.0.1/32&lt;br /&gt;
Allow from 1.1.1.1/32&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;However, they would also like to access it from a remote location with a
username and password.  &lt;/p&gt;
&lt;p&gt;First, we need to create a password file.  In the old days, you would
use "AuthType Basic", but a more secure method is the Digest method.  To
use this, you must have the auth_digest module loaded into your Apache
configuration.  If you are running a Debian or Ubuntu version, you can
do this by executing "&lt;strong&gt;sudo a2enmod auth_digest&lt;/strong&gt;".  Using digest
authentication prevents your username and password from being sent in
the clear (however, I always recommend that any site requiring
authentication should utilize https).  &lt;/p&gt;
&lt;p&gt;Next,  you create your htdigest file:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;htdigest -c .htdigest *authname username&lt;/strong&gt;*&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When prompted, you would enter a password for &lt;em&gt;username&lt;/em&gt;.  &lt;/p&gt;
&lt;p&gt;Finally, you need to modify your .htaccess file to allow either method:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Order deny,allow&lt;br /&gt;
Deny from all&lt;br /&gt;
AuthName "authname"&lt;br /&gt;
AuthType Digest&lt;br /&gt;
AuthUserFile /var/www/.htpasswd&lt;br /&gt;
require valid-userAllow from 10.10.0.1/16&lt;br /&gt;
Allow from 127.0.0.1/32&lt;br /&gt;
Allow from 1.1.1.1/32&lt;br /&gt;
Satisfy Any&lt;/strong&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, a user can come from the 10.10.x.x network, localhost, or 1.1.1.1
without requiring authentication.  If they later come from an
unrecognized IP, they can enter their username and password and be
granted access.  &lt;/p&gt;
&lt;p&gt;--&lt;br /&gt;
Securing Apache2 by IP or Username By YourTech John on January 2, 2010
8:40 AM&lt;/p&gt;</summary></entry><entry><title>Backing up with duplicity and Amazon S3</title><link href="http://www.yourtech.us//2009/10/backing-up-with-duplicity-and-amazon-s3.html" rel="alternate"></link><updated>2009-10-26T00:00:00+01:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2009-10-26:/2009/10/backing-up-with-duplicity-and-amazon-s3.html</id><summary type="html">&lt;p&gt;&lt;a href="http://duplicity.nongnu.org/" title="http://duplicity.nongnu.org/"&gt;Duplicity&lt;/a&gt; is a great little backup tool that can do incremental
backups to a variety of different servers (ftp, scp, and Amazon S3).   &lt;/p&gt;
&lt;h2&gt;&lt;a href="http://www.yourtech.us/2009/10/editor-content.html?cs=utf-8"&gt;The Install&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I am installing on a Centos 5 system which uses the yum tool. I also
have the &lt;a href="http://rpmforge.net/"&gt;http://rpmforge.net/&lt;/a&gt;repository enabled. I need that for
librsync and librsync-devel which provides rsync capabilities when the
remote file details are not available (like in FTP). &lt;br /&gt;
All of these requirements are found on the &lt;a href="http://duplicity.nongnu.org/" title="http://duplicity.nongnu.org/"&gt;duplicity&lt;/a&gt; main
page.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;yum&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;librsync&lt;/span&gt; &lt;span class="n"&gt;librsync&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;devel&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;GnuPG&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hasn&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//internap.dl.sourceforge.net/sourceforge/py-gnupg/GnuPGInterface-0.3.2.tar.gz&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xzf&lt;/span&gt; &lt;span class="n"&gt;GnuPGInterface&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.3.2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;GnuPGInterface&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.3.2&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;installcd&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;
&lt;span class="cp"&gt;# boto for python (Python S3 interface -- active development, check version #)&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//boto.googlecode.com/files/boto-1.1c.tar.gz&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xzvf&lt;/span&gt; &lt;span class="n"&gt;boto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;boto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;installcd&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;
&lt;span class="cp"&gt;# duplicity (active development, check version #)&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xzf&lt;/span&gt; &lt;span class="n"&gt;duplicity&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4.10&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt; 
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;duplicity&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.4.10&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure duplicity works by running the command "duplicity" &lt;br /&gt;
You should see something like this (and not errors about GnuPG
instances).   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;serv02&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;duplicity&lt;/span&gt; 
&lt;span class="n"&gt;Command&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Expected&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;got&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;duplicity&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;a href="http://www.yourtech.us/2009/10/editor-content.html?cs=utf-8"&gt;Make your gpg keys&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Do this as the user that you'll be running the backup as - it makes
things easier. If you have your own existing keys and know how to import
them, you can skip this step. Otherwise, we'll create a key just for
encrypting the backups before sending them to our backup server (in case
of rogue system admins at Amazon).   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;root&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;serv02&lt;/span&gt; &lt;span class="err"&gt;~&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;# gpg --gen-keygpg 
(GnuPG) 1.2.6; Copyright (C) 2004 Free Software Foundation, Inc.This program comes with ABSOLUTELY NO WARRANTY.This is free software, and you are welcome to redistribute itunder certain conditions. See the file COPYING for details.
gpg: failed to create temporary file `/home/ytjohn/.gnupg/.#lk0x9d199d8.serv02.example.com.12823&amp;#39;: No such file or directory
gpg: /home/ytjohn/.gnupg: directory created
gpg: new configuration file `/home/ytjohn/.gnupg/gpg.conf&amp;#39; created
gpg: WARNING: options in `/home/ytjohn/.gnupg/gpg.conf&amp;#39; are not yet active during this run
gpg: keyring `/home/ytjohn/.gnupg/secring.gpg&amp;#39; created
gpg: keyring `/home/ytjohn/.gnupg/pubring.gpg&amp;#39; created
Please select what kind of key you want: 
  (1) DSA and ElGamal (default) 
  (2) DSA (sign only) 
  (4) RSA (sign only)
Your selection? 1
DSA keypair will have 1024 bits.
About to generate a new ELG-E keypair.
              minimum keysize is  768 bits
              default keysize is 1024 bits
    highest suggested keysize is 2048 bits
What keysize do you want? (1024) 2048
Requested keysize is 2048 bits
Please specify how long the key should be valid.
         0 = key does not expire
      &lt;span class="nt"&gt;&amp;lt;n&amp;gt;&lt;/span&gt;  = key expires in n days
      &lt;span class="nt"&gt;&amp;lt;n&amp;gt;&lt;/span&gt;w = key expires in n weeks
      &lt;span class="nt"&gt;&amp;lt;n&amp;gt;&lt;/span&gt;m = key expires in n months
      &lt;span class="nt"&gt;&amp;lt;n&amp;gt;&lt;/span&gt;y = key expires in n years
Key is valid for? (0) 0
Key does not expire at all
Is this correct (y/n)? y                        
You need a User-ID to identify your key; the software constructs the user id
from Real Name, Comment and Email Address in this form:    &amp;quot;Heinrich Heine (Der Dichter) &lt;span class="nt"&gt;&amp;lt;heinrichh&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;duesseldorf&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;de&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;quot;
Real name: Backup Key
Email address: anything@example.com
Comment: Backup key for duplicity  
You selected this USER-ID:           &amp;quot;Backup Key (Backup key for duplicity) &lt;span class="nt"&gt;&amp;lt;anything&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;example&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;quot;
Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O
You need a Passphrase to protect your secret key.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At this point, let me interrupt and talk about the Passphrase. You can
make this anything, but I would recommend avoiding special characters
(especially dealing with \&amp;lt;&gt; ' " \ ` ) that might be interpreted by
your system shell. I generated a 15 character password &lt;a href="http://www.freepasswordgenerator.com/" title="http://www.freepasswordgenerator.com/"&gt;online&lt;/a&gt; using
only numbers, letters, and LETTERS. You will need to keep track of the
password - you will need it later when you write the backup script.   &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;lot&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="n"&gt;idea&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;perform&lt;/span&gt;
&lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;keyboard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;move&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;mouse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;utilize&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;
&lt;span class="n"&gt;disks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;during&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;prime&lt;/span&gt; &lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;gives&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;
&lt;span class="n"&gt;generator&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;chance&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;gain&lt;/span&gt; &lt;span class="n"&gt;enough&lt;/span&gt; &lt;span class="n"&gt;entropy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;+++++++++++++++++++++++++&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;+++++++++++++++++++++++++++++++++++&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;+++++&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
&lt;span class="o"&gt;+++++++++++++&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;++++++++++&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;+++++++++++++++&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;++++++++++++++++++++++++++++&lt;/span&gt;
&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;+++++&lt;/span&gt;&lt;span class="p"&gt;..............................................................&lt;/span&gt;
&lt;span class="p"&gt;.......................................................................&lt;/span&gt;
&lt;span class="p"&gt;......&lt;/span&gt;&lt;span class="o"&gt;+++++&lt;/span&gt;
&lt;span class="nl"&gt;gpg:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ytjohn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gnupg&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;trustdb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gpg&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;trustdb&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;
&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;secret&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="kt"&gt;signed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;marked&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ultimately&lt;/span&gt;

     &lt;span class="n"&gt;trusted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;  &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;53F&lt;/span&gt;&lt;span class="mi"&gt;0891&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt; 
     &lt;span class="n"&gt;Backup&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Backup&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;duplicity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;anything&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="n"&gt;fingerprint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;135&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="mi"&gt;1533&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;C94&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;A58&lt;/span&gt; &lt;span class="mi"&gt;5398&lt;/span&gt;  &lt;span class="mi"&gt;7467&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="n"&gt;A0&lt;/span&gt; &lt;span class="n"&gt;C424&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;BF0&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;C2E&lt;/span&gt;
     &lt;span class="n"&gt;sub&lt;/span&gt;  &lt;span class="mi"&gt;2048&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;630F&lt;/span&gt;&lt;span class="n"&gt;AA4F&lt;/span&gt; &lt;span class="mi"&gt;2008&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We see our key ID is 53F0891A - make a note of this for the backup
script.   &lt;/p&gt;
&lt;h2&gt;&lt;a href="http://www.yourtech.us/2009/10/editor-content.html?cs=utf-8"&gt;The backup script&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Essentially, what we want is a script that you just run and it will
perform the backup for you. For my purposes, I want to backup to
Amazon's Simple Storage Service (&lt;a href="http://s3.amazonaws.com/" title="http://s3.amazonaws.com/"&gt;s3&lt;/a&gt;). To do this, you will need to
sign up for the service (no cost to signup, just pay for space/bandwidth
used) and get the AWS/AWS secret keys (think of them like
username/passwords). &lt;br /&gt;
The following script will backup a directory called /mnt/backups to an
Amazon bucket called j123backup (the bucket name must be unique between
all Amazon S3 users). Please note that while you can use the same script
and gpg keys on multiple servers (or have multiple backup scripts on the
same server backing up different directories), you will want to make a
separate bucket for each different source backup.   &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c"&gt;# Export some ENV variables so you don&amp;#39;t have to type anything&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;accesskeyexport &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;secretkey
&lt;span class="c"&gt;# GPG passphrase we used earlier&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PASSPHRASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;123456789012345
&lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;53F0891A
&lt;span class="c"&gt;# The source of your backup&lt;/span&gt;
&lt;span class="nv"&gt;SOURCE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/mnt/backup
&lt;span class="c"&gt;# The destination&lt;/span&gt;
&lt;span class="c"&gt;# Note that the bucket need not exist&lt;/span&gt;
&lt;span class="c"&gt;# but does need to be unique amongst all&lt;/span&gt;
&lt;span class="c"&gt;# Amazon S3 users. So, choose wisely. &lt;/span&gt;
&lt;span class="nv"&gt;DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;s3+http://j123backup
&lt;span class="c"&gt;# You can of course change your destination to an ftp or# scp (ssh copy) server:&lt;/span&gt;
&lt;span class="c"&gt;#DEST=scp://backupuser@backup.example.com/backups&lt;/span&gt;
duplicity &lt;span class="se"&gt;\&lt;/span&gt;
    --encrypt-key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    --sign-key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SOURCE&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; &lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DEST&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt; 
&lt;span class="c"&gt;# this is an example of backing up multiple &lt;/span&gt;
&lt;span class="c"&gt;# directories at once and excluding others:&lt;/span&gt;
&lt;span class="c"&gt;## duplicity \&lt;/span&gt;
&lt;span class="c"&gt;#     --encrypt-key=${GPG_KEY} \&lt;/span&gt;
&lt;span class="c"&gt;#     --sign-key=${GPG_KEY} \&lt;/span&gt;
&lt;span class="c"&gt;#     --include=/home \&lt;/span&gt;
&lt;span class="c"&gt;#     --include=/var/www/html \&lt;/span&gt;
&lt;span class="c"&gt;#     --exclude=/var/www/html/cache/* \&lt;/span&gt;
&lt;span class="c"&gt;#     ${SOURCE} ${DEST} # Reset the ENV variables. Don&amp;#39;t need them sitting around&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PASSPHRASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;As a final note, you can definitely point your backup at another
destination such as ftp or scp. I later ended up choosing an scp server
over Amazon S3.--&lt;br /&gt;
Backing up with duplicity and Amazon S3 By YourTech John on October 26,
2009 7:00 AM&lt;/p&gt;</summary></entry><entry><title>Forgotten Realms</title><link href="http://www.yourtech.us//2009/09/forgotten-realms.html" rel="alternate"></link><updated>2009-09-30T00:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2009-09-30:/2009/09/forgotten-realms.html</id><summary type="html">&lt;p&gt;Yesterday I was working on a very old server -- a &lt;a href="http://en.wikipedia.org/wiki/Cobalt_RaQ"&gt;Cobalt RAQ 4&lt;/a&gt;.  I
actually leased a RAQ 3 for web hosting back in 2001 and thought it was
the neatest thing, but found it too limiting in many ways.  These
servers were popular because they could be administered using a series
of push buttons and an LCD screen up front.  It also has a web interface
that controlled everything.  These servers were highly popular back in
there day.  &lt;/p&gt;
&lt;p&gt;The Cobalt product line went away back in 2004 or so, but obviously a
good number of these servers are still in use 5 years later.  As this
server booted up, I saw an email address ending in @cobaltnet.com and
wondered if that was still around.  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Registrant:&lt;br /&gt;
Sun Microsystems, Inc.&lt;br /&gt;
   4150 Network Circle&lt;br /&gt;
   Santa Clara, CA 95054&lt;br /&gt;
   US  &lt;/p&gt;
&lt;p&gt;Domain Name: COBALTNET.COM  &lt;/p&gt;
&lt;p&gt;Administrative Contact, Technical Contact:&lt;br /&gt;
      Sun Microsystems, Inc.            hostmaster@sun.com&lt;br /&gt;
      4150 Network Circle&lt;br /&gt;
      Santa Clara, CA 95054&lt;br /&gt;
      US&lt;br /&gt;
      1-650-960-1300 fax: 650 336 6623  &lt;/p&gt;
&lt;p&gt;Record expires on 15-Jun-2010.&lt;br /&gt;
   Record created on 30-Jul-2004.&lt;br /&gt;
   Database last updated on 30-Sep-2009 00:06:34 EDT.  &lt;/p&gt;
&lt;p&gt;Domain servers in listed order:  &lt;/p&gt;
&lt;p&gt;NS1.COBALT.COM&lt;br /&gt;
   NS2.COBALT.COM  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So the cobaltnet.com domain is still in existance, at least until 2004. 
However, it doesn't resolve to anything.  The reason for that is that
the Cobalt.com domain name (notice ns1 and ns2.cobalt.com) itself has
been purchased by another company, completely unrelated to the Cobalt
server product.  So this is interesting in that Sun not only let
cobalt.com go, but they never bothered to update the cobaltnet.com
domain to point to an active name server. Sun paid about \$2 billion for
the Cobalt name and now it sits in a neglected corner of the Internet,
just a few months away from finally expiring.  &lt;/p&gt;
&lt;p&gt;This is one of many such example found on the net of things that vanish
without a trace. Cobalt was one of the first companies to really produce
a polished interface for managing a web server.  Part of me wonders what
would have happened if Cobalt/Sun had released that code as open source
before the end came.  Would the community have picked it up and
developed something amazing with it, or would it have vanished like the
parent company.  Based on recent happenings with &lt;a href="http://en.wikipedia.org/wiki/BeOS"&gt;BeOS&lt;/a&gt;and &lt;a href="http://www.haiku-os.org/"&gt;Haiku&lt;/a&gt;,
I suspect the former would have occurred.--&lt;br /&gt;
Forgotten realms By YourTech John on September 30, 2009 8:00 AM&lt;/p&gt;</summary></entry><entry><title>Back into programming, monitoring notes</title><link href="http://www.yourtech.us//2009/08/back-into-programming-monitoring-notes.html" rel="alternate"></link><updated>2009-08-25T00:00:00+02:00</updated><author><name>John Hogenmiller</name></author><id>tag:www.yourtech.us,2009-08-25:/2009/08/back-into-programming-monitoring-notes.html</id><summary type="html">&lt;p&gt;I have been out of the programming circuit for a few years and have been
looking at getting back into it.  My traditional programming style is an
ssh window into my server and all my editing takes place on a
development server, in vi.  &lt;/p&gt;
&lt;p&gt;Recently, I've been trying to decent work out a way to determine how the
world sees your connectivity from within your network.  Essentially, I
wanted to simulate accessing one of my locally connected machines from
the Internet.  Typically, you have to subscribe to a third party service
to perform this service for you.  Coincidentally, I have been reading up
on &lt;a href="https://appengine.google.com/"&gt;Google App Engine&lt;/a&gt; and saw the potential in using GAE for my
purpose.  I could envision writing a monitoring system that runs
entirely on the GAE.  Unfortunately, I had no programming experience in
Python or Java.  I did see that &lt;a href="http://www.caucho.com/resin-3.0/quercus/"&gt;PHP has been ported to Java&lt;/a&gt; and
someone got &lt;a href="http://www.webdigi.co.uk/blog/2009/run-php-on-the-google-app-engine/"&gt;PHP running on GAE&lt;/a&gt;.  The possibility of either creating
a new monitoring system in PHP (or modifying an existing PHP-based
monitoring system) entered my mind.  &lt;/p&gt;
&lt;p&gt;I decided that rather than stay with PHP, I would use this project as a
method to learn Python.  I started digging into Python resources and
contemplating how I would want my monitoring system to work.  Ultimately
though, I decided I didn't want to create a brand-new monitoring system
(even a basic one) when existing ones such as Nagios and Zabbix do
perfectly well. In my research, I found a project called
&lt;a href="http://code.google.com/p/mirrorrr/"&gt;mirrorrr&lt;/a&gt;that used GAE as a web-proxy.    &lt;/p&gt;
&lt;p&gt;This solution was immediately obvious.  My existing monitoring system
(Zabbix) has support for fetching web pages.  I could place a file with
the word "OK" on my local web server and then fetch it through GAE.   I
could even determine through the returned page whether my server was
down or if GAE was down.  &lt;/p&gt;
&lt;p&gt;I set to work testing out the mirrorrr code under my own account.  The
major issue I observed is that mirrorrr is configured to cache pages,
meaning that when I changed my OK to FAIL, mirrorrr never updated the
page.  In the closed-source world, that is the end of the story. 
However, since this is an open-source project, this was an opportunity.  &lt;/p&gt;
&lt;p&gt;I've been wanting to get back into programming, and I when I start back,
I want to be familiar with using an IDE (namely Eclipse).  In
preparation for creating a monitoring system, I had setup a development
station in (*gasp*) Windows Server 2003.  I connect to this via remote
desktop and generally leave Eclipse running 24x7. I had also gone
through the steps of installing the PyDev plugin, the GAE plugins, and
SVN plugins.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Process&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;I downloaded a copy of the code using SVN checkout and set to work
editing the mirror.py file to disable CACHE.  I call this the "dive in
and learn to swim later" process.  Here, I could make changes to
existing code and test them out immediately.  In fact, the SDK for GAE
works as a sort of mini-server.  Once I run the code within the SDK, any
change I make to the source affects the running instance.    &lt;/p&gt;
&lt;p&gt;I was able to read through and alter the code to allow me to switch
between caching and non-caching.  I ran into an issue with their "recent
urls" feature.  This shows the last 5 urls you have visited.  When you
are not caching your data, this never gets sets and starts throwing
errors.  I realized I would have to improve that section of the code
before I could truly implement a configurable "enable cache" option.  &lt;/p&gt;
&lt;p&gt;At this point, I backed out of my file and considered my options.  I
wanted to make two distinct changes to the source, one of which requires
the other.  The author of the project hasn't maid a change to his(her?)
code since December of 2008.  However, I did see recent entries in the
Wiki, indicating this wasn't an abandoned project.  I realized that to
truly make my changes worthwhile, I should try and get them included
back in the upstream.  To do so, I should submit each change separately.
That required more tracking than I had been doing.  &lt;/p&gt;
&lt;p&gt;So, I took care of another todo list item.  I went ahead and setup an
"official" repository server for YourTech, checked out a fresh copy of
mirrorrr, and then imported it into mine.  Now I could work.  I imported
the project from my repo server into Eclipse and started recreating my
work.  First I added added a feature to disable the recent urls.  At the
same time, I made an improvement by moving a chunk of code into a
self-contained method (which is apparently what python calls functions,
as near I can tell at this juncture).  Once this was committed, I went
ahead and proceeded with recreating my work on disabling the cache.   &lt;/p&gt;
&lt;p&gt;Once I was done, you could enable or disable each feature separately. 
However, if you disabled the cache but left recent urls enabled, your
recent urls would never update.  On the flip side, if recent urls were
recorded before disabling the cache, then you could see the most recent
urls before caching was disabled.  Some person may want that feature --
they could start up the mirrorrr, visit several links, then disable the
cache, preserving those links on the main page forever.  &lt;/p&gt;
&lt;p&gt;At this point, the only remaining task was to submit my changes to the
project maintainer.  I opened issues &lt;a href="http://code.google.com/p/mirrorrr/issues/detail?id=6"&gt;6&lt;/a&gt; &amp;amp; &lt;a href="http://code.google.com/p/mirrorrr/issues/detail?id=7"&gt;7&lt;/a&gt; and now I await
response.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;The more I use Eclipse, the more I like it.  The ability to perform
every step of the process in one program is extremely useful.  Steps
like comparing history or checking out a specific version is much easier
to grasp than when you are tooling around the command line.  In the
shell, I would typically have most of my files open as a background
task.  Reverting a file from subversion required switching back to the
file, closing it, then reverting.  In Eclipse, it's a right-click
operation, regardless of whether the file is open or not.  &lt;/p&gt;
&lt;p&gt;Python's syntax is a bit weird coming from a Perl and PHP background,
but it's learn-able.   As I plan to make several more improvements to
mirrorrr, I hope to become proficient in this language as well. 
However, I may be picking up a Perl project in the near future using the
&lt;a href="http://mojolicious.org/"&gt;Mojo toolkit&lt;/a&gt;, so everything is up in the air.&lt;/p&gt;</summary></entry></feed>